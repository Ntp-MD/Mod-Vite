import{r as y,d as J,_ as He,h as Ke,c as B,e as d,F as q,f as U,u as o,i as je,t as I,o as S,n as ve,j as Ge}from"./index-B4IG5iwV.js";const _e=!1,Y=y([]),K=y(1),W=y([]),D=y({}),F=y([]),R=y(0),k=y(0),p=y("idle"),P=y(0),j=y(0),fe=10,Ce=fe*1,Re=fe*2,v=y(6),Qe=["#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"];y(500);const Ye=y([500,500,500,500,500,500]),E=y(0),te=y(!0),A=y([]),i=y([]),c=y([]),h=y([]),ne=y([]),ie=y([]),De=J(()=>i.value[0]===0),b=y([]),Je=[10,20,50,100],x=10,se=J(()=>Math.max(0,P.value-(c.value[0]||0))),Ve=J(()=>i.value[0]+(c.value[0]||0)),Me=J(()=>p.value==="idle"?!1:P.value===(c.value[0]||0)),Pe=J(()=>P.value>(c.value[0]||0)&&i.value[0]>=P.value-(c.value[0]||0)),Te=J(()=>i.value[0]>P.value-(c.value[0]||0)&&j.value>=x);J(()=>!0);const we=J(()=>i.value[0]>0&&p.value!=="idle"&&p.value!=="showdown"),oe=y(null),ge=[{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5}];function We(a){return A.value.forEach((e,l)=>{const t=new RegExp(`\\b${e}\\b`,"g");a=a.replace(t,`<span class="player-log-color" style="color: ${Qe[l]}">${e}</span>`)}),a}function m(a){Y.value[K.value-1]||(Y.value[K.value-1]=[]),Y.value[K.value-1].push(We(a))}function ke(a){switch(a){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function re(a){return{2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14}[a]}function ze(a){const e={};for(const l of a)if(e[l.suit]=(e[l.suit]||0)+1,e[l.suit]>=5)return l.suit;return null}function pe(a){let e=[...new Set(a)].sort((l,t)=>t-l);e.includes(14)&&e.push(1);for(let l=0;l<=e.length-5;l++){let t=!0;for(let n=1;n<5;n++)if(e[l+n]!==e[l]-n){t=!1;break}if(t)return e.slice(l,l+5)}return null}function xe(){const a=["♠","♥","♦","♣"],e=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],l=[];for(const t of a)for(const n of e)l.push({rank:n,suit:t});for(let t=l.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[l[t],l[n]]=[l[n],l[t]]}return l}function Ne(a,e){const l={};for(let t=0;t<a;t++)l[t]=W.value.splice(0,e);return l}function Be(){E.value=Math.floor(Math.random()*v.value);const a=["Dealer","SB","BB","UTG","MP","CO"];for(let e=0;e<v.value;e++){const l=(e-E.value+v.value)%v.value;ie.value[e]=a[l]||`P${e}`}}function qe(){if(i.value[0]===0){p.value="idle",m("You are busted. Game over!");return}const a=i.value.map((e,l)=>e>0?l:-1).filter(e=>e!==-1);i.value=a.map(e=>i.value[e]),A.value=a.map(e=>A.value[e]),c.value=a.map(e=>c.value[e]||0),h.value=a.map(e=>h.value[e]||!1),ne.value=a.map(e=>ne.value[e]||""),b.value=a.map(e=>b.value[e]||!1),D.value=a.map(e=>D.value[e]),v.value=i.value.length}function Ie(a){const e=a.map(f=>re(f.rank)),l={};for(let f of e)l[f]=(l[f]||0)+1;const t=ze(a);let n=[];t&&(n=a.filter(f=>f.suit===t).map(f=>re(f.rank)).sort((f,_)=>_-f));let u=null;n.length>=5&&(u=pe(n));const s=[...new Set(e)].sort((f,_)=>_-f),r=Object.entries(l).map(([f,_])=>({val:+f,count:_})).sort((f,_)=>_.count-f.count||_.val-f.val);if(u)return u[0]===14?{handName:"Royal Flush",handRank:10,values:u}:{handName:"Straight Flush",handRank:9,values:u};if(r[0].count===4){const f=s.find(_=>_!==r[0].val);return{handName:"Four of a Kind",handRank:8,values:[r[0].val,f]}}if(r[0].count===3&&r[1]&&r[1].count>=2)return{handName:"Full House",handRank:7,values:[r[0].val,r[1].val]};if(n.length>=5)return{handName:"Flush",handRank:6,values:n.slice(0,5)};const M=pe(e);if(M)return{handName:"Straight",handRank:5,values:M};if(r[0].count===3){const f=s.filter(_=>_!==r[0].val).slice(0,2);return{handName:"Three of a Kind",handRank:4,values:[r[0].val,...f]}}if(r[0].count===2&&r[1]&&r[1].count===2){const f=r[0].val,_=r[1].val,G=s.find(V=>V!==f&&V!==_);return{handName:"Two Pair",handRank:3,values:[f,_,G]}}if(r[0].count===2){const f=r[0].val,_=s.filter(G=>G!==f).slice(0,3);return{handName:"One Pair",handRank:2,values:[f,..._]}}return{handName:"High Card",handRank:1,values:s.slice(0,5)}}function Ue(a){j.value=Math.min(Ve.value,j.value+a)}function Xe(a){j.value=Math.max(x,j.value-a)}function be(){Y.value=[],K.value=1,W.value=xe(),F.value=[],R.value=0,k.value=0,p.value="betting",P.value=0,A.value=Array.from({length:v.value},(n,u)=>u===0?"You":`AI ${u}`),D.value=Ne(v.value,2),i.value=Ye.value.slice(0,v.value),c.value=Array(v.value).fill(0),h.value=Array(v.value).fill(!1),ne.value=Array(v.value).fill(""),b.value=Array(v.value).fill(!1),Be();const a=(E.value+1)%v.value,e=(E.value+2)%v.value;m(`--- Round ${K.value} ---`);const l=Math.min(Ce,i.value[a]);l>0&&(i.value[a]-=l,c.value[a]+=l,R.value+=l,m(`${A.value[a]} posts small blind: ${l}$`));const t=Math.min(Re,i.value[e]);t>0&&(i.value[e]-=t,c.value[e]+=t,R.value+=t,m(`${A.value[e]} posts big blind: ${t}$`)),P.value=c.value[e],k.value=(e+1)%v.value,H()}function ye(){E.value=0,K.value=1,Y.value=[],p.value="idle",A.value=[],i.value=[],c.value=[],h.value=[],ne.value=[],ie.value=[],b.value=[],F.value=[],R.value=0,k.value=0,W.value=[],D.value={},j.value=x,m("Game reset. Configure settings and click 'Start Game' to begin.")}function $e(){if(!te.value){m("Cannot start a new round before the current one ends.");return}if(te.value=!1,qe(),v.value<2){m("Not enough players to continue the game."),te.value=!0;return}E.value=(E.value+1)%v.value,K.value++,Y.value=[],W.value=xe(),F.value=[],R.value=0,p.value="betting",P.value=0,D.value=Ne(v.value,2),c.value=Array(v.value).fill(0),h.value=Array(v.value).fill(!1),ne.value=Array(v.value).fill(""),b.value=Array(v.value).fill(!1),Be(),m(`--- Round ${K.value} ---`);const a=(E.value+1)%v.value,e=(E.value+2)%v.value,l=Math.min(Ce,i.value[a]);l>0&&(i.value[a]-=l,c.value[a]+=l,R.value+=l,m(`${A.value[a]} posts small blind: ${l}$`));const t=Math.min(Re,i.value[e]);t>0&&(i.value[e]-=t,c.value[e]+=t,R.value+=t,m(`${A.value[e]} posts big blind: ${t}$`)),P.value=c.value[e],k.value=(e+1)%v.value,H()}function Ze(){F.value=W.value.splice(0,3),p.value="flop",b.value=Array(v.value).fill(!1)}function ea(){F.value.push(W.value.splice(0,1)[0]),p.value="turn",b.value=Array(v.value).fill(!1)}function aa(){F.value.push(W.value.splice(0,1)[0]),p.value="river",b.value=Array(v.value).fill(!1)}function Ae(){c.value=Array(v.value).fill(0),P.value=0,oe.value=null,j.value=0;let a="",e=!1;if(p.value==="betting"?(Ze(),a="--- Flop ---"):p.value==="flop"?(ea(),a="--- Turn ---"):p.value==="turn"?(aa(),a="--- River ---"):p.value==="river"?(p.value="showdown",Le(),e=!0):(console.error("proceedToNextPhase called with unexpected gamePhase:",p.value),e=!0),a&&m(a),e)return!0;let l=-1,t;v.value===2?t=E.value:t=(E.value+1)%v.value;for(let n=0;n<v.value;n++){const u=(t+n)%v.value;if(!h.value[u]){l=u;break}}return l!==-1?k.value=l:console.error("CRITICAL: No active player found to start new betting round in proceedToNextPhase."),!1}let ce=!1;async function H(){if(k.value===0&&i.value[0]>0&&!b.value[0]&&!h.value[0]){if(_e.value){X();return}return}if(!ce){ce=!0;try{for(;;){const e=k.value;if(h.value.filter(t=>!t).length<=1){p.value!=="showdown"&&(p.value="showdown",Le());return}if(h.value[e]){k.value=(e+1)%v.value;continue}if(i.value[e]===0&&!h.value[e]&&!b.value[e])b.value[e]=!0;else if(i.value[e]>0&&!h.value[e]&&!b.value[e])break;let l=!0;for(let t=0;t<v.value;t++)if(!h.value[t]&&i.value[t]>0&&!b.value[t]){l=!1;break}if(l){if(!Ae()){const n=i.value.map((s,r)=>r).filter(s=>!h.value[s]),u=n.filter(s=>i.value[s]>0);n.length>1&&u.length<=1&&p.value,setTimeout(H,200)}return}k.value=(e+1)%v.value}if(k.value===0&&i.value[0]>0&&!b.value[0]&&!h.value[0])return;try{const e=Ee(k.value);await new Promise(l=>setTimeout(l,200)),Se(k.value,e)}catch(e){console.error(`Error during AI ${A.value[k.value]}'s turn:`,e),m(`Error for ${A.value[k.value]}. They are folded due to an error.`),k.value>=0&&k.value<v.value&&(h.value[k.value]=!0,b.value[k.value]=!0)}let a=!0;for(let e=0;e<v.value;e++)if(!h.value[e]&&i.value[e]>0&&!b.value[e]){a=!1;break}if(a){if(!Ae()){const l=i.value.map((n,u)=>u).filter(n=>!h.value[n]),t=l.filter(n=>i.value[n]>0);l.length>1&&t.length<=1&&p.value,setTimeout(H,200)}return}k.value=(k.value+1)%v.value,setTimeout(H,200)}catch(a){console.error("Critical error in nextTurn game logic:",a),m("A critical error occurred. Game progression might be halted.")}finally{ce=!1}}}function X(a,e=0){if(_e.value){const t=Ee(0);Se(0,t),setTimeout(()=>H(),200);return}if(k.value!==0)return;let l="";if(a==="fold")h.value[0]=!0,l="You folded.";else if(a==="check"){if(!Me.value)return;l="You checked."}else if(a==="call"){if(!Pe.value)return;const t=se.value;i.value[0]-=t,c.value[0]+=t,R.value+=t,l=`You called $${t}`}else if(a==="raise"){if(!Te.value)return;const t=se.value;let n=Math.max(x,e);if(n%10!==0)return;const u=t+n;if(i.value[0]<u)return;i.value[0]-=u,c.value[0]+=u,R.value+=u,P.value=c.value[0],oe.value=0,l=`You raised $${n} (to $${c.value[0]})`,b.value=b.value.map((s,r)=>!!(r===0||h.value[r]))}else if(a==="all-in"){if(!we.value){m("You cannot go all-in at this time (e.g. game not active, or action not on you).");return}const t=i.value[0];i.value[0]=0,c.value[0]+=t,R.value+=t,l=`You go ALL-IN with $${t} (total bet $${c.value[0]})`,c.value[0]>P.value&&(P.value=c.value[0],oe.value=0,b.value=b.value.map((n,u)=>!!(u===0||h.value[u])),l+=", raising the bet!")}m(l),b.value[0]=!0,k.value=(k.value+1)%v.value,setTimeout(()=>H(),200)}function Se(a,e){let{action:l,amount:t}=e;const n=i.value[a],u=c.value[a]||0,s=P.value-u;if(l==="call"&&s===0&&(l="check"),l==="fold")h.value[a]=!0,m(`${A.value[a]} folds.`);else if(l==="raise"){const r=n-s;let M=Math.min(t,r);if(n>s+M&&(M=Math.max(x,M)),M<=0&&s===0)m(`${A.value[a]} checks.`);else if(M<0)h.value[a]=!0,m(`${A.value[a]} folds (unable to complete raise).`);else{const f=s+M;i.value[a]-=f,c.value[a]+=f,R.value+=f,P.value=c.value[a],oe.value=a,i.value[a]===0&&f>0?m(`${A.value[a]} raises ALL-IN by $${M} (total bet $${c.value[a]})`):m(`${A.value[a]} raises by $${M} (total bet $${c.value[a]})`),b.value=b.value.map((_,G)=>h.value[G]||G===a)}}else if(l==="call")if(n>=s)i.value[a]-=s,c.value[a]+=s,R.value+=s,m(`${A.value[a]} calls $${s}`);else{const r=n;R.value+=r,c.value[a]+=r,i.value[a]=0,m(`${A.value[a]} calls ALL-IN with $${r}`)}else l==="check"&&(s>0?(h.value[a]=!0,m(`${A.value[a]} (AI) attempts to check facing a bet of $${s}, and folds.`)):m(`${A.value[a]} checks.`));b.value[a]=!0}function Le(){const a=[];for(let n=0;n<v.value;n++)if(!h.value[n]){const u=D.value[n].concat(F.value);a.push({index:n,handEvaluation:Ie(u)})}if(a.length===0){m("No active players. Pot remains."),te.value=!0;return}a.sort((n,u)=>u.handEvaluation.handRank-n.handEvaluation.handRank);const e=a[0],l=R.value,t=c.value[e.index]||0;i.value[e.index]+=l,m(`${A.value[e.index]} wins with ${e.handEvaluation.handName} and receives $${l} (net +$${l-t})`),R.value=0,m(`--- End of Round ${K.value} ---`),te.value=!0}function Ee(a){const e=D.value[a],l=F.value,t=e.concat(l),n=Ie(t),u=i.value[a],s=P.value-(c.value[a]||0),r=R.value,M=h.value.filter($=>!$).length,f=ie.value[a]||a,_=v.value,G=fe*2;if(u>0&&u<G*5){if(Math.random()<.6||n.handRank>=4)return{action:"allin"};if(u<=s)return{action:"fold"};if(s<=u)return{action:"call"}}if(l.length===0){const $=e.map(le=>re(le.rank)),N=$[0]===$[1],w=[["A","A"],["K","K"],["Q","Q"],["J","J"],["A","K"],["A","Q"],["A","J"],["K","Q"]],g=[e[0].rank,e[1].rank].sort(),L=w.some(le=>le.sort().toString()===g.toString()),C=Math.max(...$)>=11;if(N&&["A","K","Q","J","10","9","8","7"].includes(e[0].rank))return s===0?{action:"raise",amount:Math.max(x,30)}:s<=u*.2?{action:"call"}:{action:"fold"};if(L||!N&&C&&Math.min(...$)>=10)return s===0?{action:"raise",amount:Math.max(x,30)}:s<=u*.2?{action:"call"}:{action:"fold"}}let V=0,ue=0,Z=0;for(let $=0;$<_;$++)$!==a&&!h.value[$]&&(V+=ge[$].aggression,ue+=ge[$].tightness,Z++);V=Z?V/Z:.5,ue=Z?ue/Z:.5;const Fe=f>=_-2;let z=0;if(l.length>=3){const $={},N={};for(const C of l)$[C.suit]=($[C.suit]||0)+1,N[C.rank]=(N[C.rank]||0)+1;Object.values(N).some(C=>C>=2)&&(z+=1),Object.values($).some(C=>C>=3)&&(z+=1);const w={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},g=Object.keys(N).map(C=>w[C]).sort((C,le)=>C-le);let L=1;for(let C=1;C<g.length;C++)g[C]===g[C-1]+1?L++:L=1,L>=3&&(z+=1)}let O=0;if(n.handRank<4&&l.length>=3){const $={};for(const g of t)$[g.suit]=($[g.suit]||0)+1;Object.values($).some(g=>g===4)&&(O=.18);const N=t.map(g=>re(g.rank)),w=[...new Set(N)].sort((g,L)=>g-L);for(let g=0;g<w.length-3;g++)w[g+3]-w[g]===3&&w.slice(g,g+4).length===4&&(O=Math.max(O,.17));for(let g=0;g<w.length-3;g++){const L=w.slice(g,g+4);L[3]-L[0]===4&&L.length===4&&(O=Math.max(O,.08))}}let de=s/(r+s);O>0&&u>r*1.5&&(de=s/(r+s+r*.5));let he=!1;if(l.length>=3){const $=l.map(N=>N.suit);for(const N of["♠","♥","♦","♣"])$.filter(w=>w===N).length>=3&&e.some(w=>w.suit===N&&w.rank==="A")&&(he=!0)}let ee=!1,ae=.05+.1*(6-M);Fe&&(ae+=.05),ue>.7&&(ae+=.1),O>0&&(ae+=.1),he&&(ae+=.08),Math.random()<ae&&z===0&&(ee=!0);let Q=1;u<r*.5&&(Q*=1.2),u>r*2&&(Q*=.9),M>=4?Q*=.7:M===3?Q*=.85:M===2&&(Q*=1.1);let T=x;n.handRank>=6?T=Math.min(u,Math.max(x,Math.floor(r*.75))):n.handRank>=4?T=Math.min(u,Math.max(x,Math.floor(r*.5))):ee?T=Math.min(u,Math.max(x,Math.floor(r*.4))):T=Math.min(u,x),T=Math.floor(T/10)*10,T<x&&(T=x);const me=n.handRank>=4&&n.handRank<6,Oe=V>.7&&z>0&&s>0;return me&&Oe&&s<=u*.2?{action:"call"}:Math.random()<.03?{action:"fold"}:h.value[a]?{action:"fold"}:u<=s?n.handRank>=5||ee?{action:"allin"}:{action:"fold"}:O>0&&de<O&&s<=u*.3?{action:"call"}:ee&&s===0&&u>T?{action:"raise",amount:T}:n.handRank>=6&&Math.random()<.8*Q?s===0?{action:"raise",amount:T}:s<=T?{action:"call"}:{action:"fold"}:me?s===0&&Math.random()<.2*Q&&!z?{action:"raise",amount:T}:s<=T?{action:"call"}:{action:"fold"}:s===0?{action:"check"}:s<=x&&Math.random()<.3*Q?{action:"call"}:ee&&s<=T?{action:"call"}:{action:"fold"}}const la={class:"TableLayout"},ta={class:"PlayerLineup"},na={class:"PlayerName"},ua={class:"PlayerPos"},sa={class:"PlayerPosition"},oa={class:"PlayerHand"},ra={class:"RankCard"},ia={class:"SuitCard"},va={class:"PlayerBet"},ca={class:"TableFlob"},fa={key:0,class:"TableFlobCard"},da={class:"RankCard"},ha={class:"SuitCard"},ma={class:"PoolMoney"},ga={class:"CurrentPhase"},ka=["innerHTML"],pa={class:"ActionButton"},ba=["disabled"],ya=["disabled"],$a=["disabled"],Aa=["disabled"],_a=["disabled"],Ca={class:"ChipButton"},Ra=["onClick"],Ma=["onClick"],Pa={class:"TableSetting"},Ta=["disabled"],wa=["disabled"],xa={__name:"Table",setup(a){const e=y(null);return Ke(Y,()=>{Ge(()=>{e.value&&(e.value.scrollTop=e.value.scrollHeight)})},{deep:!0}),(l,t)=>(S(),B("div",la,[d("div",ta,[(S(!0),B(q,null,U(o(A),(n,u)=>(S(),B("div",{key:u,class:ve(["PlayerFrame",{currentTurn:u===o(k),foldedPlayers:o(h)[u],mainPlayer:u===0,Player:u!==0&&u===o(k)}])},[d("div",na,[d("div",null,I(n),1),d("div",ua,"("+I(o(ie)[u])+")",1)]),d("div",sa,[d("div",null,"$"+I(o(i)[u]),1)]),d("div",oa,[(S(!0),B(q,null,U(o(D)[u],(s,r)=>(S(),B("div",{key:r,class:ve(["CardBody",[o(ke)(s.suit),{hideCard:u!==0&&o(p)!=="showdown"}]])},[d("div",ra,I(s.rank),1),d("div",ia,I(s.suit),1)],2))),128))]),d("div",va,"Bet: $"+I(o(c)[u]),1)],2))),128))]),d("div",ca,[o(F)&&o(F).length?(S(),B("div",fa,[(S(!0),B(q,null,U(o(F),(n,u)=>(S(),B("div",{key:u,class:ve(["CardBody",o(ke)(n.suit)])},[d("div",da,I(n.rank),1),d("div",ha,I(n.suit),1)],2))),128))])):je("",!0),d("div",ma,I(o(R))+"$",1),d("div",ga,"Current Phase: "+I(o(p)),1)]),d("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:e},[(S(!0),B(q,null,U(o(Y),(n,u)=>(S(),B("div",{key:u,class:"RoundLog"},[d("div",null,[(S(!0),B(q,null,U(n,(s,r)=>(S(),B("div",{key:r,innerHTML:s},null,8,ka))),128))])]))),128))],512),d("div",pa,[d("button",{onClick:t[0]||(t[0]=n=>o(X)("check")),disabled:!o(Me)},"Check",8,ba),d("button",{onClick:t[1]||(t[1]=n=>o(X)("call",o(se))),disabled:!o(Pe)},I(`Call $${o(se)}`),9,ya),d("button",{onClick:t[2]||(t[2]=n=>o(X)("raise",o(j))),disabled:!o(Te)},"Raise $"+I(o(j)),9,$a),d("button",{onClick:t[3]||(t[3]=n=>o(X)("all-in")),disabled:!o(we)},"All-In",8,Aa),d("button",{onClick:t[4]||(t[4]=n=>o(X)("fold")),disabled:o(p)==="idle"||o(k)!==0},"Fold",8,_a)]),d("div",Ca,[(S(!0),B(q,null,U(o(Je),n=>(S(),B("div",{key:n,class:"ChipBtn"},[d("button",{onClick:u=>o(Ue)(n)},"+ $"+I(n),9,Ra),d("button",{onClick:u=>o(Xe)(n)},"- $"+I(n),9,Ma)]))),128))]),d("div",Pa,[d("button",{onClick:t[5]||(t[5]=(...n)=>o(be)&&o(be)(...n)),disabled:o(p)!=="idle"},"Start Game",8,Ta),d("button",{onClick:t[6]||(t[6]=(...n)=>o($e)&&o($e)(...n)),disabled:o(p)!=="showdown"||o(De)},"Next",8,wa),d("button",{onClick:t[7]||(t[7]=(...n)=>o(ye)&&o(ye)(...n))},"Reset")])]))}},Ia=He(xa,[["__scopeId","data-v-c1fb01a9"]]);export{Ia as default};
