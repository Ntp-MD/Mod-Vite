import{r as $,d as V,_ as xe,l as Se,c as I,e as h,F as z,f as U,u as r,i as Fe,t as P,o as x,n as ve,m as Le}from"./index-BbWek1W7.js";const Q=$([]),K=$(1),W=$([]),j=$({}),O=$([]),R=$(0),k=$(0),p=$("idle"),T=$(0),D=$(0),ue=10,i=$(6),Ee=$(500),E=$(0),te=$(!0),_=$([]),v=$([]),f=$([]),m=$([]),ne=$([]),ie=$([]),y=$([]),Oe=[10,20,50,100],S=10,oe=V(()=>Math.max(0,T.value-(f.value[0]||0))),He=V(()=>v.value[0]+(f.value[0]||0)),Ae=V(()=>p.value==="idle"?!1:T.value===(f.value[0]||0)),_e=V(()=>T.value>(f.value[0]||0)&&v.value[0]>=T.value-(f.value[0]||0)),Ce=V(()=>v.value[0]>T.value-(f.value[0]||0));V(()=>!0);const Re=V(()=>v.value[0]>0&&p.value!=="idle"&&p.value!=="showdown"),se=$(null),me=[{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5}];function d(e){Q.value[K.value-1]||(Q.value[K.value-1]=[]),Q.value[K.value-1].push(e)}function ge(e){switch(e){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function re(e){return{2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14}[e]}function Ke(e){const a={};for(const l of e)if(a[l.suit]=(a[l.suit]||0)+1,a[l.suit]>=5)return l.suit;return null}function ke(e){let a=[...new Set(e)].sort((l,t)=>t-l);a.includes(14)&&a.push(1);for(let l=0;l<=a.length-5;l++){let t=!0;for(let n=1;n<5;n++)if(a[l+n]!==a[l]-n){t=!1;break}if(t)return a.slice(l,l+5)}return null}function Me(){const e=["♠","♥","♦","♣"],a=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],l=[];for(const t of e)for(const n of a)l.push({rank:n,suit:t});for(let t=l.length-1;t>0;t--){const n=Math.floor(Math.random()*(t+1));[l[t],l[n]]=[l[n],l[t]]}return l}function Pe(e,a){const l={};for(let t=0;t<e;t++)l[t]=W.value.splice(0,a);return l}function Te(){E.value=Math.floor(Math.random()*i.value);const e=["Dealer","SB","BB","UTG","MP","CO"];for(let a=0;a<i.value;a++){const l=(a-E.value+i.value)%i.value;ie.value[a]=e[l]||`P${a}`}}function Ye(){if(v.value[0]===0){p.value="idle",d("You are busted. Game over!");return}const e=v.value.map((a,l)=>a>0?l:-1).filter(a=>a!==-1);v.value=e.map(a=>v.value[a]),_.value=e.map(a=>_.value[a]),f.value=e.map(a=>f.value[a]||0),m.value=e.map(a=>m.value[a]||!1),ne.value=e.map(a=>ne.value[a]||""),y.value=e.map(a=>y.value[a]||!1),j.value=e.map(a=>j.value[a]),i.value=v.value.length}function we(e){const a=e.map(c=>re(c.rank));e.map(c=>c.suit);const l={};for(let c of a)l[c]=(l[c]||0)+1;const t=Ke(e);let n=[];t&&(n=e.filter(c=>c.suit===t).map(c=>re(c.rank)).sort((c,A)=>A-c));let u=null;n.length>=5&&(u=ke(n));const o=[...new Set(a)].sort((c,A)=>A-c),s=Object.entries(l).map(([c,A])=>({val:+c,count:A})).sort((c,A)=>A.count-c.count||A.val-c.val);if(u)return u[0]===14?{handName:"Royal Flush",handRank:10,values:u}:{handName:"Straight Flush",handRank:9,values:u};if(s[0].count===4){const c=o.find(A=>A!==s[0].val);return{handName:"Four of a Kind",handRank:8,values:[s[0].val,c]}}if(s[0].count===3&&s[1]&&s[1].count>=2)return{handName:"Full House",handRank:7,values:[s[0].val,s[1].val]};if(n.length>=5)return{handName:"Flush",handRank:6,values:n.slice(0,5)};const M=ke(a);if(M)return{handName:"Straight",handRank:5,values:M};if(s[0].count===3){const c=o.filter(A=>A!==s[0].val).slice(0,2);return{handName:"Three of a Kind",handRank:4,values:[s[0].val,...c]}}if(s[0].count===2&&s[1]&&s[1].count===2){const c=s[0].val,A=s[1].val,F=o.find(J=>J!==c&&J!==A);return{handName:"Two Pair",handRank:3,values:[c,A,F]}}if(s[0].count===2){const c=s[0].val,A=o.filter(F=>F!==c).slice(0,3);return{handName:"One Pair",handRank:2,values:[c,...A]}}return{handName:"High Card",handRank:1,values:o.slice(0,5)}}function Ge(e){D.value=Math.min(He.value,D.value+e)}function Qe(e){D.value=Math.max(S,D.value-e)}function pe(){Q.value=[],K.value=1,W.value=Me(),O.value=[],R.value=0,k.value=0,p.value="betting",T.value=0,_.value=Array.from({length:i.value},(o,s)=>s===0?"You":`AI ${s}`),j.value=Pe(i.value,2),v.value=Array(i.value).fill(Ee.value),f.value=Array(i.value).fill(0),m.value=Array(i.value).fill(!1),ne.value=Array(i.value).fill(""),y.value=Array(i.value).fill(!1),Te();const e=ue*1,a=ue*2,l=(E.value+1)%i.value,t=(E.value+2)%i.value;d(`--- Round ${K.value} ---`);const n=Math.min(e,v.value[l]);n>0&&(v.value[l]-=n,f.value[l]+=n,R.value+=n,d(`${_.value[l]} posts small blind: ${n}$`));const u=Math.min(a,v.value[t]);u>0&&(v.value[t]-=u,f.value[t]+=u,R.value+=u,d(`${_.value[t]} posts big blind: ${u}$`)),T.value=f.value[t],k.value=(t+1)%i.value,G()}function be(){E.value=0,K.value=1,Q.value=[],p.value="idle",_.value=[],v.value=[],f.value=[],m.value=[],ne.value=[],ie.value=[],y.value=[],O.value=[],R.value=0,k.value=0,W.value=[],j.value={},D.value=S,d("Game reset. Configure settings and click 'Start Game' to begin.")}function ye(){if(!te.value){d("Cannot start a new round before the current one ends.");return}if(te.value=!1,Ye(),i.value<2){d("Not enough players to continue the game."),te.value=!0;return}E.value=(E.value+1)%i.value,K.value++,Q.value.push([]),W.value=Me(),O.value=[],R.value=0,p.value="betting",T.value=0,j.value=Pe(i.value,2),f.value=Array(i.value).fill(0),m.value=Array(i.value).fill(!1),ne.value=Array(i.value).fill(""),y.value=Array(i.value).fill(!1),Te(),d(`--- Round ${K.value} ---`);const e=ue*1,a=ue*2,l=(E.value+1)%i.value,t=(E.value+2)%i.value,n=Math.min(e,v.value[l]);n>0&&(v.value[l]-=n,f.value[l]+=n,R.value+=n,d(`${_.value[l]} posts small blind: ${n}$`));const u=Math.min(a,v.value[t]);u>0&&(v.value[t]-=u,f.value[t]+=u,R.value+=u,d(`${_.value[t]} posts big blind: ${u}$`)),T.value=f.value[t],k.value=(t+1)%i.value,G()}function je(){O.value=W.value.splice(0,3),p.value="flop",y.value=Array(i.value).fill(!1)}function Je(){O.value.push(W.value.splice(0,1)[0]),p.value="turn",y.value=Array(i.value).fill(!1)}function De(){O.value.push(W.value.splice(0,1)[0]),p.value="river",y.value=Array(i.value).fill(!1)}function $e(){f.value=Array(i.value).fill(0),T.value=0,se.value=null;let e="",a=!1;if(p.value==="betting"?(je(),e="--- Flop ---"):p.value==="flop"?(Je(),e="--- Turn ---"):p.value==="turn"?(De(),e="--- River ---"):p.value==="river"?(p.value="showdown",Ne(),a=!0):(console.error("proceedToNextPhase called with unexpected gamePhase:",p.value),a=!0),e&&d(e),a)return!0;let l=-1,t;i.value===2?t=E.value:t=(E.value+1)%i.value;for(let n=0;n<i.value;n++){const u=(t+n)%i.value;if(!m.value[u]){l=u;break}}return l!==-1?k.value=l:console.error("CRITICAL: No active player found to start new betting round in proceedToNextPhase."),!1}let ce=!1;async function G(){if(!ce){ce=!0;try{for(;;){const a=k.value;if(m.value.filter(t=>!t).length<=1){p.value!=="showdown"&&(p.value="showdown",Ne());return}if(m.value[a]){k.value=(a+1)%i.value;continue}if(v.value[a]===0&&!m.value[a]&&!y.value[a])y.value[a]=!0;else if(v.value[a]>0&&!m.value[a]&&!y.value[a])break;let l=!0;for(let t=0;t<i.value;t++)if(!m.value[t]&&v.value[t]>0&&!y.value[t]){l=!1;break}if(l){if(!$e()){const n=v.value.map((o,s)=>s).filter(o=>!m.value[o]),u=n.filter(o=>v.value[o]>0);n.length>1&&u.length<=1&&p.value,setTimeout(G,200)}return}k.value=(a+1)%i.value}if(k.value===0&&v.value[0]>0&&!y.value[0]&&!m.value[0])return;try{const a=We(k.value);await new Promise(l=>setTimeout(l,200)),Ve(k.value,a)}catch(a){console.error(`Error during AI ${_.value[k.value]}'s turn:`,a),d(`Error for ${_.value[k.value]}. They are folded due to an error.`),k.value>=0&&k.value<i.value&&(m.value[k.value]=!0,y.value[k.value]=!0)}let e=!0;for(let a=0;a<i.value;a++)if(!m.value[a]&&v.value[a]>0&&!y.value[a]){e=!1;break}if(e){if(!$e()){const l=v.value.map((n,u)=>u).filter(n=>!m.value[n]),t=l.filter(n=>v.value[n]>0);l.length>1&&t.length<=1&&p.value,setTimeout(G,200)}return}k.value=(k.value+1)%i.value,setTimeout(G,200)}catch(e){console.error("Critical error in nextTurn game logic:",e),d("A critical error occurred. Game progression might be halted.")}finally{ce=!1}}}function le(e,a=0){if(k.value!==0)return;let l="";if(e==="fold")m.value[0]=!0,l="You folded.";else if(e==="check"){if(!Ae.value){d("You cannot check, there is a bet to call or action is not on you.");return}l="You checked."}else if(e==="call"){if(!_e.value){d("You cannot call (not enough money, no bet to call, or action is not on you).");return}const t=oe.value;v.value[0]-=t,f.value[0]+=t,R.value+=t,l=`You called $${t}`}else if(e==="raise"){if(!Ce.value){d("You cannot raise (e.g. not enough funds above the call amount, or action is not on you).");return}const t=oe.value;let n=Math.max(S,a);if(n%10!==0){d("Raise amount must be divisible to 10.");return}const u=t+n;if(v.value[0]<u){d("Not enough money for this specific raise amount.");return}v.value[0]-=u,f.value[0]+=u,R.value+=u,T.value=f.value[0],se.value=0,l=`You raised $${n} (to $${f.value[0]})`,y.value=y.value.map((o,s)=>!!(s===0||m.value[s]))}else if(e==="all-in"){if(!Re.value){d("You cannot go all-in at this time (e.g. game not active, or action not on you).");return}const t=v.value[0];v.value[0]=0,f.value[0]+=t,R.value+=t,l=`You go ALL-IN with $${t} (total bet $${f.value[0]})`,f.value[0]>T.value&&(T.value=f.value[0],se.value=0,y.value=y.value.map((n,u)=>!!(u===0||m.value[u])),l+=", raising the bet!")}d(l),y.value[0]=!0,k.value=(k.value+1)%i.value,setTimeout(()=>G(),200)}function Ve(e,a){let{action:l,amount:t}=a;const n=v.value[e],u=f.value[e]||0,o=T.value-u;if(l==="call"&&o===0&&(l="check"),l==="fold")m.value[e]=!0,d(`${_.value[e]} folds.`);else if(l==="raise"){const s=n-o;let M=Math.min(t,s);if(n>o+M&&(M=Math.max(S,M)),M<=0&&o===0)d(`${_.value[e]} checks.`);else if(M<0)m.value[e]=!0,d(`${_.value[e]} folds (unable to complete raise).`);else{const c=o+M;v.value[e]-=c,f.value[e]+=c,R.value+=c,T.value=f.value[e],se.value=e,v.value[e]===0&&c>0?d(`${_.value[e]} raises ALL-IN by $${M} (total bet $${f.value[e]})`):d(`${_.value[e]} raises by $${M} (total bet $${f.value[e]})`),y.value=y.value.map((A,F)=>m.value[F]||F===e)}}else if(l==="call")if(n>=o)v.value[e]-=o,f.value[e]+=o,R.value+=o,d(`${_.value[e]} calls $${o}`);else{const s=n;R.value+=s,f.value[e]+=s,v.value[e]=0,d(`${_.value[e]} calls ALL-IN with $${s}`)}else l==="check"&&(o>0?(m.value[e]=!0,d(`${_.value[e]} (AI) attempts to check facing a bet of $${o}, and folds.`)):d(`${_.value[e]} checks.`));y.value[e]=!0}function Ne(){const e=[];for(let l=0;l<i.value;l++)if(!m.value[l]){const t=j.value[l].concat(O.value);e.push({index:l,handEvaluation:we(t)})}e.length===0&&(d("No active players. Pot remains."),te.value=!0),e.sort((l,t)=>t.handEvaluation.handRank-l.handEvaluation.handRank);const a=e[0];v.value[a.index]+=R.value,d(`${_.value[a.index]} wins with ${a.handEvaluation.handName} and receives $${R.value}`),R.value=0,d(`--- End of Round ${K.value} ---`),te.value=!0}function We(e){const a=j.value[e],l=O.value,t=a.concat(l),n=we(t),u=v.value[e],o=T.value-(f.value[e]||0),s=R.value,M=m.value.filter(b=>!b).length,c=ie.value[e]||e,A=i.value;if(l.length===0){const b=a.map(ae=>re(ae.rank)),B=b[0]===b[1],N=[["A","A"],["K","K"],["Q","Q"],["J","J"],["A","K"],["A","Q"],["A","J"],["K","Q"]],g=[a[0].rank,a[1].rank].sort(),L=N.some(ae=>ae.sort().toString()===g.toString()),C=Math.max(...b)>=11;if(B&&["A","K","Q","J","10","9","8","7"].includes(a[0].rank))return o===0?{action:"raise",amount:Math.max(S,30)}:o<=u*.2?{action:"call"}:{action:"fold"};if(L||!B&&C&&Math.min(...b)>=10)return o===0?{action:"raise",amount:Math.max(S,30)}:o<=u*.2?{action:"call"}:{action:"fold"}}let F=0,J=0,X=0;for(let b=0;b<A;b++)b!==e&&!m.value[b]&&(F+=me[b].aggression,J+=me[b].tightness,X++);F=X?F/X:.5,J=X?J/X:.5;const Be=c>=A-2;let q=0;if(l.length>=3){const b={},B={};for(const C of l)b[C.suit]=(b[C.suit]||0)+1,B[C.rank]=(B[C.rank]||0)+1;Object.values(B).some(C=>C>=2)&&(q+=1),Object.values(b).some(C=>C>=3)&&(q+=1);const N={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},g=Object.keys(B).map(C=>N[C]).sort((C,ae)=>C-ae);let L=1;for(let C=1;C<g.length;C++)g[C]===g[C-1]+1?L++:L=1,L>=3&&(q+=1)}let H=0;if(n.handRank<4&&l.length>=3){const b={};for(const g of t)b[g.suit]=(b[g.suit]||0)+1;Object.values(b).some(g=>g===4)&&(H=.18);const B=t.map(g=>re(g.rank)),N=[...new Set(B)].sort((g,L)=>g-L);for(let g=0;g<N.length-3;g++)N[g+3]-N[g]===3&&N.slice(g,g+4).length===4&&(H=Math.max(H,.17));for(let g=0;g<N.length-3;g++){const L=N.slice(g,g+4);L[3]-L[0]===4&&L.length===4&&(H=Math.max(H,.08))}}let fe=o/(s+o);H>0&&u>s*1.5&&(fe=o/(s+o+s*.5));let de=!1;if(l.length>=3){const b=l.map(B=>B.suit);for(const B of["♠","♥","♦","♣"])b.filter(N=>N===B).length>=3&&a.some(N=>N.suit===B&&N.rank==="A")&&(de=!0)}let Z=!1,ee=.05+.1*(6-M);Be&&(ee+=.05),J>.7&&(ee+=.1),H>0&&(ee+=.1),de&&(ee+=.08),Math.random()<ee&&q===0&&(Z=!0);let Y=1;u<s*.5&&(Y*=1.2),u>s*2&&(Y*=.9),M>=4?Y*=.7:M===3?Y*=.85:M===2&&(Y*=1.1);let w=S;n.handRank>=6?w=Math.min(u,Math.max(S,Math.floor(s*.75))):n.handRank>=4?w=Math.min(u,Math.max(S,Math.floor(s*.5))):Z?w=Math.min(u,Math.max(S,Math.floor(s*.4))):w=Math.min(u,S),w=Math.floor(w/10)*10,w<S&&(w=S);const he=n.handRank>=4&&n.handRank<6,Ie=F>.7&&q>0&&o>0;return he&&Ie&&o<=u*.2?{action:"call"}:Math.random()<.03?{action:"fold"}:m.value[e]?{action:"fold"}:u<=o?n.handRank>=5||Z?{action:"allin"}:{action:"fold"}:H>0&&fe<H&&o<=u*.3?{action:"call"}:Z&&o===0&&u>w?{action:"raise",amount:w}:n.handRank>=6&&Math.random()<.8*Y?o===0?{action:"raise",amount:w}:o<=w?{action:"call"}:{action:"fold"}:he?o===0&&Math.random()<.2*Y&&!q?{action:"raise",amount:w}:o<=w?{action:"call"}:{action:"fold"}:o===0?{action:"check"}:o<=S&&Math.random()<.3*Y?{action:"call"}:Z&&o<=w?{action:"call"}:{action:"fold"}}const qe={class:"TableLayout"},ze={class:"PlayerLineup"},Ue={class:"PlayerName"},Xe={class:"PlayerPos"},Ze={class:"PlayerPosition"},ea={class:"PlayerHand"},aa={class:"RankCard"},la={class:"SuitCard"},ta={class:"PlayerBet"},na={class:"TableFlob"},ua={key:0,class:"TableFlobCard"},oa={class:"RankCard"},sa={class:"SuitCard"},ra={class:"PoolMoney"},ia={class:"CurrentPhase"},va={class:"ActionButton"},ca=["disabled"],fa=["disabled"],da=["disabled"],ha=["disabled"],ma=["disabled"],ga={class:"ChipButton"},ka=["onClick"],pa=["onClick"],ba={class:"TableSetting"},ya=["disabled"],$a=["disabled"],Aa={__name:"Table",setup(e){const a=$(null);return Se(Q,()=>{Le(()=>{a.value&&(a.value.scrollTop=a.value.scrollHeight)})},{deep:!0}),(l,t)=>(x(),I("div",qe,[h("div",ze,[(x(!0),I(z,null,U(r(_),(n,u)=>(x(),I("div",{key:u,class:ve(["PlayerFrame",{currentTurn:u===r(k),foldedPlayers:r(m)[u],mainPlayer:u===0,Player:u!==0&&u===r(k)}])},[h("div",Ue,[h("div",null,P(n),1),h("div",Xe,"("+P(r(ie)[u])+")",1)]),h("div",Ze,[h("div",null,"$"+P(r(v)[u]),1)]),h("div",ea,[(x(!0),I(z,null,U(r(j)[u],(o,s)=>(x(),I("div",{key:s,class:ve(["CardBody",[r(ge)(o.suit),{hideCard:u!==0&&r(p)!=="showdown"}]])},[h("div",aa,P(o.rank),1),h("div",la,P(o.suit),1)],2))),128))]),h("div",ta,"Bet: $"+P(r(f)[u]),1)],2))),128))]),h("div",na,[r(O)&&r(O).length?(x(),I("div",ua,[(x(!0),I(z,null,U(r(O),(n,u)=>(x(),I("div",{key:u,class:ve(["CardBody",r(ge)(n.suit)])},[h("div",oa,P(n.rank),1),h("div",sa,P(n.suit),1)],2))),128))])):Fe("",!0),h("div",ra,P(r(R))+"$",1),h("div",ia,"Current Phase: "+P(r(p)),1)]),h("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:a},[(x(!0),I(z,null,U(r(Q),(n,u)=>(x(),I("div",{key:u,class:"RoundLog"},[h("div",null,"Round "+P(u+1),1),h("div",null,[(x(!0),I(z,null,U(n,(o,s)=>(x(),I("div",{key:s},P(o),1))),128))])]))),128))],512),h("div",va,[h("button",{onClick:t[0]||(t[0]=n=>r(le)("check")),disabled:!r(Ae)},"Check",8,ca),h("button",{onClick:t[1]||(t[1]=n=>r(le)("call",r(oe))),disabled:!r(_e)},P(`Call $${r(oe)}`),9,fa),h("button",{onClick:t[2]||(t[2]=n=>r(le)("raise",r(D))),disabled:!r(Ce)},"Raise $"+P(r(D)),9,da),h("button",{onClick:t[3]||(t[3]=n=>r(le)("all-in")),disabled:!r(Re)},"All-In",8,ha),h("button",{onClick:t[4]||(t[4]=n=>r(le)("fold")),disabled:r(p)==="idle"||r(k)!==0},"Fold",8,ma)]),h("div",ga,[(x(!0),I(z,null,U(r(Oe),n=>(x(),I("div",{key:n,class:"ChipBtn"},[h("button",{onClick:u=>r(Ge)(n)},"+ $"+P(n),9,ka),h("button",{onClick:u=>r(Qe)(n)},"- $"+P(n),9,pa)]))),128))]),h("div",ba,[h("button",{onClick:t[5]||(t[5]=(...n)=>r(pe)&&r(pe)(...n)),disabled:r(p)!=="idle"},"Start Game",8,ya),h("button",{onClick:t[6]||(t[6]=(...n)=>r(ye)&&r(ye)(...n)),disabled:r(p)!=="showdown"},"Next",8,$a),h("button",{onClick:t[7]||(t[7]=(...n)=>r(be)&&r(be)(...n))},"Reset")])]))}},Ra=xe(Aa,[["__scopeId","data-v-3bf39530"]]);export{Ra as default};
