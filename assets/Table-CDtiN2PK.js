import{r as b,d as J,_ as He,h as Ke,c as I,e as d,F as q,f as U,u as s,i as je,t as x,j as Ge,o as S,n as ce,k as Qe}from"./index-BuAkDrOV.js";const Z=b(!1),Y=b([]),K=b(1),z=b([]),D=b({}),E=b([]),M=b(0),k=b(0),p=b("idle"),P=b(0),j=b(0),de=10,Ce=de*1,Re=de*2,v=b(6),Ye=["#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"];b(500);const De=b([500,500,500,500,500,500]),L=b(0),ne=b(!0),A=b([]),i=b([]),c=b([]),h=b([]),ue=b([]),ve=b([]),Je=J(()=>i.value[0]===0),y=b([]),We=[10,20,50,100],N=10,se=J(()=>Math.max(0,P.value-(c.value[0]||0))),ze=J(()=>i.value[0]+(c.value[0]||0)),Me=J(()=>p.value==="idle"?!1:P.value===(c.value[0]||0)),Pe=J(()=>P.value>(c.value[0]||0)&&i.value[0]>=P.value-(c.value[0]||0)),Te=J(()=>i.value[0]>P.value-(c.value[0]||0)&&j.value>=N);J(()=>!0);const we=J(()=>i.value[0]>0&&p.value!=="idle"&&p.value!=="showdown"),re=b(null),ke=[{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5}];function Ve(a){return A.value.forEach((e,l)=>{const u=new RegExp(`\\b${e}\\b`,"g");a=a.replace(u,`<span class="player-log-color" style="color: ${Ye[l]}">${e}</span>`)}),a}function m(a){Y.value[K.value-1]||(Y.value[K.value-1]=[]),Y.value[K.value-1].push(Ve(a))}function pe(a){switch(a){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function ie(a){return{2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14}[a]}function qe(a){const e={};for(const l of a)if(e[l.suit]=(e[l.suit]||0)+1,e[l.suit]>=5)return l.suit;return null}function be(a){let e=[...new Set(a)].sort((l,u)=>u-l);e.includes(14)&&e.push(1);for(let l=0;l<=e.length-5;l++){let u=!0;for(let t=1;t<5;t++)if(e[l+t]!==e[l]-t){u=!1;break}if(u)return e.slice(l,l+5)}return null}function xe(){const a=["♠","♥","♦","♣"],e=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],l=[];for(const u of a)for(const t of e)l.push({rank:t,suit:u});for(let u=l.length-1;u>0;u--){const t=Math.floor(Math.random()*(u+1));[l[u],l[t]]=[l[t],l[u]]}return l}function Ne(a,e){const l={};for(let u=0;u<a;u++)l[u]=z.value.splice(0,e);return l}function Be(){L.value=Math.floor(Math.random()*v.value);const a=["Dealer","SB","BB","UTG","MP","CO"];for(let e=0;e<v.value;e++){const l=(e-L.value+v.value)%v.value;ve.value[e]=a[l]||`P${e}`}}function Ue(){if(i.value[0]===0){p.value="idle",m("You are busted. Game over!");return}const a=i.value.map((e,l)=>e>0?l:-1).filter(e=>e!==-1);i.value=a.map(e=>i.value[e]),A.value=a.map(e=>A.value[e]),c.value=a.map(e=>c.value[e]||0),h.value=a.map(e=>h.value[e]||!1),ue.value=a.map(e=>ue.value[e]||""),y.value=a.map(e=>y.value[e]||!1),D.value=a.map(e=>D.value[e]),v.value=i.value.length}function Ie(a){const e=a.map(f=>ie(f.rank)),l={};for(let f of e)l[f]=(l[f]||0)+1;const u=qe(a);let t=[];u&&(t=a.filter(f=>f.suit===u).map(f=>ie(f.rank)).sort((f,_)=>_-f));let n=null;t.length>=5&&(n=be(t));const o=[...new Set(e)].sort((f,_)=>_-f),r=Object.entries(l).map(([f,_])=>({val:+f,count:_})).sort((f,_)=>_.count-f.count||_.val-f.val);if(n)return n[0]===14?{handName:"Royal Flush",handRank:10,values:n}:{handName:"Straight Flush",handRank:9,values:n};if(r[0].count===4){const f=o.find(_=>_!==r[0].val);return{handName:"Four of a Kind",handRank:8,values:[r[0].val,f]}}if(r[0].count===3&&r[1]&&r[1].count>=2)return{handName:"Full House",handRank:7,values:[r[0].val,r[1].val]};if(t.length>=5)return{handName:"Flush",handRank:6,values:t.slice(0,5)};const C=be(e);if(C)return{handName:"Straight",handRank:5,values:C};if(r[0].count===3){const f=o.filter(_=>_!==r[0].val).slice(0,2);return{handName:"Three of a Kind",handRank:4,values:[r[0].val,...f]}}if(r[0].count===2&&r[1]&&r[1].count===2){const f=r[0].val,_=r[1].val,G=o.find(W=>W!==f&&W!==_);return{handName:"Two Pair",handRank:3,values:[f,_,G]}}if(r[0].count===2){const f=r[0].val,_=o.filter(G=>G!==f).slice(0,3);return{handName:"One Pair",handRank:2,values:[f,..._]}}return{handName:"High Card",handRank:1,values:o.slice(0,5)}}function Xe(a){j.value=Math.min(ze.value,j.value+a)}function Ze(a){j.value=Math.max(N,j.value-a)}function ye(){Y.value=[],K.value=1,z.value=xe(),E.value=[],M.value=0,k.value=0,p.value="betting",P.value=0,A.value=Array.from({length:v.value},(t,n)=>n===0?"You":`AI ${n}`),D.value=Ne(v.value,2),i.value=De.value.slice(0,v.value),c.value=Array(v.value).fill(0),h.value=Array(v.value).fill(!1),ue.value=Array(v.value).fill(""),y.value=Array(v.value).fill(!1),Be();const a=(L.value+1)%v.value,e=(L.value+2)%v.value;m(`--- Round ${K.value} ---`);const l=Math.min(Ce,i.value[a]);l>0&&(i.value[a]-=l,c.value[a]+=l,M.value+=l,m(`${A.value[a]} posts small blind: ${l}$`));const u=Math.min(Re,i.value[e]);u>0&&(i.value[e]-=u,c.value[e]+=u,M.value+=u,m(`${A.value[e]} posts big blind: ${u}$`)),P.value=c.value[e],k.value=(e+1)%v.value,H()}function $e(){L.value=0,K.value=1,Y.value=[],p.value="idle",A.value=[],i.value=[],c.value=[],h.value=[],ue.value=[],ve.value=[],y.value=[],E.value=[],M.value=0,k.value=0,z.value=[],D.value={},j.value=N,m("Game reset. Configure settings and click 'Start Game' to begin.")}function Ae(){if(!ne.value){m("Cannot start a new round before the current one ends.");return}if(ne.value=!1,Ue(),v.value<2){m("Not enough players to continue the game."),ne.value=!0;return}L.value=(L.value+1)%v.value,K.value++,Y.value=[],z.value=xe(),E.value=[],M.value=0,p.value="betting",P.value=0,D.value=Ne(v.value,2),c.value=Array(v.value).fill(0),h.value=Array(v.value).fill(!1),ue.value=Array(v.value).fill(""),y.value=Array(v.value).fill(!1),Be(),m(`--- Round ${K.value} ---`);const a=(L.value+1)%v.value,e=(L.value+2)%v.value,l=Math.min(Ce,i.value[a]);l>0&&(i.value[a]-=l,c.value[a]+=l,M.value+=l,m(`${A.value[a]} posts small blind: ${l}$`));const u=Math.min(Re,i.value[e]);u>0&&(i.value[e]-=u,c.value[e]+=u,M.value+=u,m(`${A.value[e]} posts big blind: ${u}$`)),P.value=c.value[e],k.value=(e+1)%v.value,H()}function ea(){E.value=z.value.splice(0,3),p.value="flop",y.value=Array(v.value).fill(!1)}function aa(){E.value.push(z.value.splice(0,1)[0]),p.value="turn",y.value=Array(v.value).fill(!1)}function la(){E.value.push(z.value.splice(0,1)[0]),p.value="river",y.value=Array(v.value).fill(!1)}function _e(){c.value=Array(v.value).fill(0),P.value=0,re.value=null,j.value=0;let a="",e=!1;if(p.value==="betting"?(ea(),a="--- Flop ---"):p.value==="flop"?(aa(),a="--- Turn ---"):p.value==="turn"?(la(),a="--- River ---"):p.value==="river"?(p.value="showdown",Fe(),e=!0):(console.error("proceedToNextPhase called with unexpected gamePhase:",p.value),e=!0),a&&m(a),e)return!0;let l=-1,u;v.value===2?u=L.value:u=(L.value+1)%v.value;for(let t=0;t<v.value;t++){const n=(u+t)%v.value;if(!h.value[n]){l=n;break}}return l!==-1?k.value=l:console.error("CRITICAL: No active player found to start new betting round in proceedToNextPhase."),!1}let fe=!1;async function H(){if(k.value===0&&i.value[0]>0&&!y.value[0]&&!h.value[0]){if(Z.value){X();return}return}if(!fe){fe=!0;try{for(;;){const e=k.value;if(h.value.filter(u=>!u).length<=1){p.value!=="showdown"&&(p.value="showdown",Fe());return}if(h.value[e]){k.value=(e+1)%v.value;continue}if(i.value[e]===0&&!h.value[e]&&!y.value[e])y.value[e]=!0;else if(i.value[e]>0&&!h.value[e]&&!y.value[e])break;let l=!0;for(let u=0;u<v.value;u++)if(!h.value[u]&&i.value[u]>0&&!y.value[u]){l=!1;break}if(l){if(!_e()){const t=i.value.map((o,r)=>r).filter(o=>!h.value[o]),n=t.filter(o=>i.value[o]>0);t.length>1&&n.length<=1&&p.value,setTimeout(H,200)}return}k.value=(e+1)%v.value}if(k.value===0&&i.value[0]>0&&!y.value[0]&&!h.value[0])return;try{const e=Le(k.value);await new Promise(l=>setTimeout(l,200)),Se(k.value,e)}catch(e){console.error(`Error during AI ${A.value[k.value]}'s turn:`,e),m(`Error for ${A.value[k.value]}. They are folded due to an error.`),k.value>=0&&k.value<v.value&&(h.value[k.value]=!0,y.value[k.value]=!0)}let a=!0;for(let e=0;e<v.value;e++)if(!h.value[e]&&i.value[e]>0&&!y.value[e]){a=!1;break}if(a){if(!_e()){const l=i.value.map((t,n)=>n).filter(t=>!h.value[t]),u=l.filter(t=>i.value[t]>0);l.length>1&&u.length<=1&&p.value,setTimeout(H,200)}return}k.value=(k.value+1)%v.value,setTimeout(H,200)}catch(a){console.error("Critical error in nextTurn game logic:",a),m("A critical error occurred. Game progression might be halted.")}finally{fe=!1}}}function X(a,e=0){if(Z.value){const u=Le(0);Se(0,u),setTimeout(()=>H(),200);return}if(k.value!==0)return;let l="";if(a==="fold")h.value[0]=!0,l="You folded.";else if(a==="check"){if(!Me.value)return;l="You checked."}else if(a==="call"){if(!Pe.value)return;const u=se.value;i.value[0]-=u,c.value[0]+=u,M.value+=u,l=`You called $${u}`}else if(a==="raise"){if(!Te.value)return;const u=se.value;let t=Math.max(N,e);if(t%10!==0)return;const n=u+t;if(i.value[0]<n)return;i.value[0]-=n,c.value[0]+=n,M.value+=n,P.value=c.value[0],re.value=0,l=`You raised $${t} (to $${c.value[0]})`,y.value=y.value.map((o,r)=>!!(r===0||h.value[r]))}else if(a==="all-in"){if(!we.value){m("You cannot go all-in at this time (e.g. game not active, or action not on you).");return}const u=i.value[0];i.value[0]=0,c.value[0]+=u,M.value+=u,l=`You go ALL-IN with $${u} (total bet $${c.value[0]})`,c.value[0]>P.value&&(P.value=c.value[0],re.value=0,y.value=y.value.map((t,n)=>!!(n===0||h.value[n])),l+=", raising the bet!")}m(l),y.value[0]=!0,k.value=(k.value+1)%v.value,setTimeout(()=>H(),200)}function Se(a,e){let{action:l,amount:u}=e;const t=i.value[a],n=c.value[a]||0,o=P.value-n;if(l==="call"&&o===0&&(l="check"),l==="fold")h.value[a]=!0,m(`${A.value[a]} folds.`);else if(l==="raise"){const r=t-o;let C=Math.min(u,r);if(t>o+C&&(C=Math.max(N,C)),C<=0&&o===0)m(`${A.value[a]} checks.`);else if(C<0)h.value[a]=!0,m(`${A.value[a]} folds (unable to complete raise).`);else{const f=o+C;i.value[a]-=f,c.value[a]+=f,M.value+=f,P.value=c.value[a],re.value=a,i.value[a]===0&&f>0?m(`${A.value[a]} raises ALL-IN by $${C} (total bet $${c.value[a]})`):m(`${A.value[a]} raises by $${C} (total bet $${c.value[a]})`),y.value=y.value.map((_,G)=>h.value[G]||G===a)}}else if(l==="call")if(t>=o)i.value[a]-=o,c.value[a]+=o,M.value+=o,m(`${A.value[a]} calls $${o}`);else{const r=t;M.value+=r,c.value[a]+=r,i.value[a]=0,m(`${A.value[a]} calls ALL-IN with $${r}`)}else l==="check"&&(o>0?(h.value[a]=!0,m(`${A.value[a]} (AI) attempts to check facing a bet of $${o}, and folds.`)):m(`${A.value[a]} checks.`));y.value[a]=!0}function Fe(){const a=[];for(let t=0;t<v.value;t++)if(!h.value[t]){const n=D.value[t].concat(E.value);a.push({index:t,handEvaluation:Ie(n)})}if(a.length===0){m("No active players. Pot remains."),ne.value=!0;return}a.sort((t,n)=>n.handEvaluation.handRank-t.handEvaluation.handRank);const e=a[0],l=M.value,u=c.value[e.index]||0;i.value[e.index]+=l,m(`${A.value[e.index]} wins with ${e.handEvaluation.handName} and receives $${l} (net +$${l-u})`),M.value=0,m(`--- End of Round ${K.value} ---`),ne.value=!0}function Le(a){const e=D.value[a],l=E.value,u=e.concat(l),t=Ie(u),n=i.value[a],o=P.value-(c.value[a]||0),r=M.value,C=h.value.filter($=>!$).length,f=ve.value[a]||a,_=v.value,G=de*2;if(n>0&&n<G*5){if(Math.random()<.6||t.handRank>=4)return{action:"allin"};if(n<=o)return{action:"fold"};if(o<=n)return{action:"call"}}if(l.length===0){const $=e.map(te=>ie(te.rank)),B=$[0]===$[1],w=[["A","A"],["K","K"],["Q","Q"],["J","J"],["A","K"],["A","Q"],["A","J"],["K","Q"]],g=[e[0].rank,e[1].rank].sort(),F=w.some(te=>te.sort().toString()===g.toString()),R=Math.max(...$)>=11;if(B&&["A","K","Q","J","10","9","8","7"].includes(e[0].rank))return o===0?{action:"raise",amount:Math.max(N,30)}:o<=n*.2?{action:"call"}:{action:"fold"};if(F||!B&&R&&Math.min(...$)>=10)return o===0?{action:"raise",amount:Math.max(N,30)}:o<=n*.2?{action:"call"}:{action:"fold"}}let W=0,oe=0,ee=0;for(let $=0;$<_;$++)$!==a&&!h.value[$]&&(W+=ke[$].aggression,oe+=ke[$].tightness,ee++);W=ee?W/ee:.5,oe=ee?oe/ee:.5;const Ee=f>=_-2;let V=0;if(l.length>=3){const $={},B={};for(const R of l)$[R.suit]=($[R.suit]||0)+1,B[R.rank]=(B[R.rank]||0)+1;Object.values(B).some(R=>R>=2)&&(V+=1),Object.values($).some(R=>R>=3)&&(V+=1);const w={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},g=Object.keys(B).map(R=>w[R]).sort((R,te)=>R-te);let F=1;for(let R=1;R<g.length;R++)g[R]===g[R-1]+1?F++:F=1,F>=3&&(V+=1)}let O=0;if(t.handRank<4&&l.length>=3){const $={};for(const g of u)$[g.suit]=($[g.suit]||0)+1;Object.values($).some(g=>g===4)&&(O=.18);const B=u.map(g=>ie(g.rank)),w=[...new Set(B)].sort((g,F)=>g-F);for(let g=0;g<w.length-3;g++)w[g+3]-w[g]===3&&w.slice(g,g+4).length===4&&(O=Math.max(O,.17));for(let g=0;g<w.length-3;g++){const F=w.slice(g,g+4);F[3]-F[0]===4&&F.length===4&&(O=Math.max(O,.08))}}let he=o/(r+o);O>0&&n>r*1.5&&(he=o/(r+o+r*.5));let me=!1;if(l.length>=3){const $=l.map(B=>B.suit);for(const B of["♠","♥","♦","♣"])$.filter(w=>w===B).length>=3&&e.some(w=>w.suit===B&&w.rank==="A")&&(me=!0)}let ae=!1,le=.2+.2*(6-C);Ee&&(le+=.05),oe>.7&&(le+=.1),O>0&&(le+=.1),me&&(le+=.08),Math.random()<le&&V===0&&(ae=!0);let Q=2;n<r*.5&&(Q*=1.3),n>r*2&&(Q*=1),C>=4?Q*=1:C===3?Q*=1.1:C===2&&(Q*=1.3);let T=N;t.handRank>=6?T=Math.min(n,Math.max(N,Math.floor(r*.75))):t.handRank>=4?T=Math.min(n,Math.max(N,Math.floor(r*.5))):ae?T=Math.min(n,Math.max(N,Math.floor(r*.4))):T=Math.min(n,N),T=Math.floor(T/10)*10,T<N&&(T=N);const ge=t.handRank>=4&&t.handRank<6,Oe=W>.7&&V>0&&o>0;return ge&&Oe&&o<=n*.2?{action:"call"}:Math.random()<.03?{action:"fold"}:h.value[a]?{action:"fold"}:n<=o?t.handRank>=5||ae?{action:"allin"}:{action:"fold"}:O>0&&he<O&&o<=n*.3?{action:"call"}:ae&&o===0&&n>T?{action:"raise",amount:T}:t.handRank>=4&&Math.random()<.5*Q?o===0?{action:"raise",amount:T}:o<=T?{action:"call"}:{action:"fold"}:ge?o===0&&Math.random()<.2*Q&&!V?{action:"raise",amount:T}:o<=T?{action:"call"}:{action:"fold"}:o===0?{action:"check"}:o<=N&&Math.random()<.3*Q?{action:"call"}:ae&&o<=T?{action:"call"}:{action:"fold"}}const ta={class:"TableLayout"},na={class:"PlayerLineup"},ua={class:"PlayerName"},oa={class:"PlayerPos"},sa={class:"PlayerPosition"},ra={class:"PlayerHand"},ia={class:"RankCard"},va={class:"SuitCard"},ca={class:"PlayerBet"},fa={class:"TableFlob"},da={key:0,class:"TableFlobCard"},ha={class:"RankCard"},ma={class:"SuitCard"},ga={class:"PoolMoney"},ka={class:"CurrentPhase"},pa=["innerHTML"],ba={class:"ActionButton"},ya=["disabled"],$a=["disabled"],Aa=["disabled"],_a=["disabled"],Ca=["disabled"],Ra={class:"ChipButton"},Ma=["onClick"],Pa=["onClick"],Ta={class:"TableSetting"},wa=["disabled"],xa=["disabled"],Na={__name:"Table",setup(a){const e=b(null);function l(){Z.value=!Z.value}return Ke(Y,()=>{Qe(()=>{e.value&&(e.value.scrollTop=e.value.scrollHeight)})},{deep:!0}),(u,t)=>(S(),I("div",ta,[d("div",na,[(S(!0),I(q,null,U(s(A),(n,o)=>(S(),I("div",{key:o,class:ce(["PlayerFrame",{currentTurn:o===s(k),foldedPlayers:s(h)[o],mainPlayer:o===0,Player:o!==0&&o===s(k)}])},[d("div",ua,[d("div",null,x(n),1),d("div",oa,"("+x(s(ve)[o])+")",1)]),d("div",sa,[d("div",null,"$"+x(s(i)[o]),1)]),d("div",ra,[(S(!0),I(q,null,U(s(D)[o],(r,C)=>(S(),I("div",{key:C,class:ce(["CardBody",[s(pe)(r.suit),{hideCard:o!==0&&s(p)!=="showdown"}]])},[d("div",ia,x(r.rank),1),d("div",va,x(r.suit),1)],2))),128))]),d("div",ca,"Bet: $"+x(s(c)[o]),1)],2))),128))]),d("div",fa,[s(E)&&s(E).length?(S(),I("div",da,[(S(!0),I(q,null,U(s(E),(n,o)=>(S(),I("div",{key:o,class:ce(["CardBody",s(pe)(n.suit)])},[d("div",ha,x(n.rank),1),d("div",ma,x(n.suit),1)],2))),128))])):je("",!0),d("div",ga,x(s(M))+"$",1),d("div",ka,"Current Phase: "+x(s(p)),1)]),d("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:e},[(S(!0),I(q,null,U(s(Y),(n,o)=>(S(),I("div",{key:o,class:"RoundLog"},[d("div",null,[(S(!0),I(q,null,U(n,(r,C)=>(S(),I("div",{key:C,innerHTML:r},null,8,pa))),128))])]))),128))],512),d("div",ba,[d("button",{onClick:t[0]||(t[0]=n=>s(X)("check")),disabled:!s(Me)},"Check",8,ya),d("button",{onClick:t[1]||(t[1]=n=>s(X)("call",s(se))),disabled:!s(Pe)},x(`Call $${s(se)}`),9,$a),d("button",{onClick:t[2]||(t[2]=n=>s(X)("raise",s(j))),disabled:!s(Te)},"Raise $"+x(s(j)),9,Aa),d("button",{onClick:t[3]||(t[3]=n=>s(X)("all-in")),disabled:!s(we)},"All-In",8,_a),d("button",{onClick:t[4]||(t[4]=n=>s(X)("fold")),disabled:s(p)==="idle"||s(k)!==0},"Fold",8,Ca)]),d("div",Ra,[(S(!0),I(q,null,U(s(We),n=>(S(),I("div",{key:n,class:"ChipBtn"},[d("button",{onClick:o=>s(Xe)(n)},"+ $"+x(n),9,Ma),d("button",{onClick:o=>s(Ze)(n)},"- $"+x(n),9,Pa)]))),128))]),d("div",Ta,[d("button",{onClick:t[5]||(t[5]=(...n)=>s(ye)&&s(ye)(...n)),disabled:s(p)!=="idle"},"Start Game",8,wa),d("button",{onClick:t[6]||(t[6]=(...n)=>s(Ae)&&s(Ae)(...n)),disabled:s(p)!=="showdown"||s(Je)},"Next",8,xa),d("button",{onClick:t[7]||(t[7]=(...n)=>s($e)&&s($e)(...n))},"Reset"),d("button",{onClick:l},[d("span",{style:Ge({color:s(Z).value?"green":"red",fontWeight:"bold"})},x(s(Z).value?"ON":"OFF"),5)])])]))}},Sa=He(Na,[["__scopeId","data-v-f20a548b"]]);export{Sa as default};
