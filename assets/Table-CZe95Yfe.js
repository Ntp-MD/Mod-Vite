import{r as g,e as V,_ as ce,k as de,c as P,b as c,F as O,f as Y,u as o,l as fe,t as C,o as B,n as U,m as he}from"./index-BdWZckva.js";const E=g([]),L=g(1),H=g([]),j=g({}),x=g([]),_=g(0),d=g(0),k=g("idle"),M=g(0),N=g(5),J=5,i=g(6),me=g(100),T=g(0),f=g([]),s=g([]),v=g([]),$=g([]),X=g([]),Z=g([]),$e=g([]),p=g([]),be=[5,10,20,50,100,200],z=5,Q=V(()=>Math.max(0,M.value-(v.value[0]||0))),ge=V(()=>s.value[0]+(v.value[0]||0)),ye=V(()=>M.value===(v.value[0]||0)),ke=V(()=>M.value>(v.value[0]||0)&&s.value[0]>=M.value-(v.value[0]||0)),pe=V(()=>s.value[0]>M.value-(v.value[0]||0)),_e=V(()=>s.value[0]>0&&k.value!=="idle"&&k.value!=="showdown"),q=g(null);function r(a){E.value[L.value-1]||(E.value[L.value-1]=[]),E.value[L.value-1].push(a)}function ee(a){switch(a){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function se(){const a=["♠","♥","♦","♣"],n=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],l=[];for(const e of a)for(const t of n)l.push({rank:t,suit:e});for(let e=l.length-1;e>0;e--){const t=Math.floor(Math.random()*(e+1));[l[e],l[t]]=[l[t],l[e]]}return l}function oe(a,n){const l={};for(let e=0;e<a;e++)s.value[e]>0?l[e]=H.value.splice(0,n):(l[e]=[],$.value[e]=!0,r(`${f.value[e]} is out of money and cannot be dealt cards.`));return l}function ie(a){const n={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},l={},e={},t=a.map(h=>n[h.rank]).sort((h,F)=>h-F);for(const h of a){const F=n[h.rank];l[F]=(l[F]||0)+1,e[h.suit]=(e[h.suit]||0)+1}const u=Object.values(e).some(h=>h>=5);let m=null;if(u){for(const h in e)if(e[h]>=5){m=h;break}}const A=(u?a.filter(h=>h.suit===m):a).map(h=>n[h.rank]).sort((h,F)=>h-F);let b=[...new Set(A)].sort((h,F)=>h-F),y=!1,I=0;if(b.length>=5){for(let h=b.length-1;h>=4;h--)if(b[h]-b[h-4]===4){y=!0,I=b[h];break}!y&&b.includes(14)&&b.includes(2)&&b.includes(3)&&b.includes(4)&&b.includes(5)&&(y=!0,I=5)}const G=Object.values(l).sort((h,F)=>F-h);let S=0,w="High Card";return u&&y&&I===14?(S=10,w="Royal Flush"):u&&y?(S=9,w="Straight Flush"):G[0]===4?(S=8,w="Four of a Kind"):G[0]===3&&G[1]>=2?(S=7,w="Full House"):u?(S=6,w="Flush"):y?(S=5,w="Straight"):G[0]===3?(S=4,w="Three of a Kind"):G[0]===2&&G[1]===2?(S=3,w="Two Pair"):G[0]===2&&(S=2,w="One Pair"),{handName:w,handRank:S,highCard:Math.max(...t),values:t}}function re(){T.value=Math.floor(Math.random()*i.value);const a=["Dealer","SB","BB","UTG","MP","CO"];for(let n=0;n<i.value;n++){const l=(n-T.value+i.value)%i.value;Z.value[n]=a[l]||`P${n}`}}function Ae(a){for(let n=a.length-1;n>0;n--){const l=Math.floor(Math.random()*(n+1));[a[n],a[l]]=[a[l],a[n]]}return a}function ae(){E.value=[],L.value=1,H.value=se(),x.value=[],_.value=0,d.value=0,k.value="betting",$e.value=Ae([...Array(i.value).keys()]),f.value=Array.from({length:i.value},(t,u)=>u===0?"You":`AI ${u}`),s.value=Array(i.value).fill(me.value),v.value=Array(i.value).fill(0),$.value=Array(i.value).fill(!1),X.value=Array(i.value).fill(""),p.value=Array(i.value).fill(!1),j.value=oe(i.value,2),re();const a=J*1,n=J*2;let l,e;if(i.value===2?(l=T.value,e=(T.value+1)%i.value):(l=(T.value+1)%i.value,e=(T.value+2)%i.value),r(`--- Round ${L.value} ---`),!$.value[l]&&s.value[l]>0){const t=Math.min(a,s.value[l]);s.value[l]-=t,v.value[l]=t,_.value+=t,r(`${f.value[l]} posts small blind: ${t}$`),s.value[l]===0&&t>0&&r(`${f.value[l]} is all-in with the small blind.`)}else s.value[l]<=0&&(r(`${f.value[l]} is out of money and cannot post small blind.`),$.value[l]=!0);if(!$.value[e]&&s.value[e]>0){const t=Math.min(n,s.value[e]);s.value[e]-=t,v.value[e]=t,_.value+=t,r(`${f.value[e]} posts big blind: ${t}$`),s.value[e]===0&&t>0&&r(`${f.value[e]} is all-in with the big blind.`)}else s.value[e]<=0&&(r(`${f.value[e]} is out of money and cannot post big blind.`),$.value[e]=!0);M.value=Math.max(v.value[l]||0,v.value[e]||0),i.value===2?d.value=l:d.value=(e+1)%i.value,D()}function le(){T.value=0,L.value=1,E.value=[],k.value="idle",f.value=[],s.value=[],v.value=[],$.value=[],X.value=[],Z.value=[],p.value=[],x.value=[],_.value=0,d.value=0,H.value=[],j.value={},N.value=z,r("Game reset. Configure settings and click 'Start Game' to begin.")}function te(){T.value=(T.value+1)%i.value,L.value++,E.value.push([]),H.value=se(),_.value=0,k.value="betting",M.value=0,v.value=Array(i.value).fill(0),$.value=Array(i.value).fill(!1),X.value=Array(i.value).fill(""),p.value=Array(i.value).fill(!1),j.value=oe(i.value,2),x.value=[],re(),r(`--- Round ${L.value} ---`);const a=J,n=J*2;let l,e;if(i.value===2?(l=T.value,e=(T.value+1)%i.value):(l=(T.value+1)%i.value,e=(T.value+2)%i.value),!$.value[l]&&s.value[l]>0){const t=Math.min(a,s.value[l]);s.value[l]-=t,v.value[l]=t,_.value+=t,r(`${f.value[l]} posts small blind: ${t}$`),s.value[l]===0&&t>0&&r(`${f.value[l]} is all-in with the small blind.`)}else s.value[l]<=0&&(r(`${f.value[l]} is out of money and cannot post small blind.`),$.value[l]=!0);if(!$.value[e]&&s.value[e]>0){const t=Math.min(n,s.value[e]);s.value[e]-=t,v.value[e]=t,_.value+=t,r(`${f.value[e]} posts big blind: ${t}$`),s.value[e]===0&&t>0&&r(`${f.value[e]} is all-in with the big blind.`)}else s.value[e]<=0&&(r(`${f.value[e]} is out of money and cannot post big blind.`),$.value[e]=!0);M.value=Math.max(v.value[l]||0,v.value[e]||0),i.value===2?d.value=l:d.value=(e+1)%i.value,D()}function ue(){if(p.value=Array(i.value).fill(!1),v.value=Array(i.value).fill(0),M.value=0,q.value=null,k.value==="betting")Ce(),r("--- Flop ---"),k.value="flop";else if(k.value==="flop")Me(),r("--- Turn ---"),k.value="turn";else if(k.value==="turn")Re(),r("--- River ---"),k.value="river";else if(k.value==="river")return k.value="showdown",ve(),!0;return d.value=0,!1}let W=!1;async function D(){if(!W){W=!0;try{for(;;){if($.value.filter(a=>!a).length<=1){k.value="showdown",ve();return}if(d.value>=0&&d.value<i.value&&!$.value[d.value]&&!p.value[d.value])break;if(d.value=(d.value+1)%i.value,p.value.every((a,n)=>a||$.value[n])){ue()||setTimeout(D,500);return}}if(d.value===0)return;try{const a=Pe(d.value);await new Promise(n=>setTimeout(n,500)),Be(d.value,a)}catch(a){console.error(`Error during AI ${f.value[d.value]}'s turn:`,a),r(`Error for ${f.value[d.value]}. They are folded due to an error.`),d.value>=0&&d.value<i.value&&($.value[d.value]=!0,p.value[d.value]=!0)}if(p.value.every((a,n)=>a||$.value[n])){ue()||setTimeout(D,500);return}d.value=(d.value+1)%i.value,setTimeout(D,200)}catch(a){console.error("Critical error in nextTurn game logic:",a),r("A critical error occurred. Game progression might be halted.")}finally{W=!1}}}function Ce(){x.value=H.value.splice(0,3),k.value="flop",p.value=Array(i.value).fill(!1)}function Me(){x.value.push(H.value.splice(0,1)[0]),k.value="turn",p.value=Array(i.value).fill(!1)}function Re(){x.value.push(H.value.splice(0,1)[0]),k.value="river",p.value=Array(i.value).fill(!1)}function K(a,n=0){if(d.value!==0)return;let l="";if(a==="fold")$.value[0]=!0,l="You folded.";else if(a==="check")l="You checked.";else if(a==="call"){const e=Q.value;s.value[0]-=e,v.value[0]+=e,_.value+=e,l=`You called $${e}`}else if(a==="raise"){const e=Q.value,t=Math.max(z,n),u=e+t;if(s.value[0]<u){l="Not enough money to raise.",r(l);return}s.value[0]-=u,v.value[0]+=u,_.value+=u,M.value=v.value[0],q.value=0,l=`You raised $${t} (to $${v.value[0]})`,p.value=p.value.map((m,R)=>!!(R===0||$.value[R])),d.value===0&&(N.value=0)}else if(a==="all-in"){const e=s.value[0];s.value[0]=0,v.value[0]+=e,_.value+=e,l=`You go ALL-IN with $${e} (total bet $${v.value[0]})`,v.value[0]>M.value&&(M.value=v.value[0],q.value=0,p.value=p.value.map((t,u)=>!!(u===0||$.value[u])),l+=", raising the bet!")}r(l),p.value[0]=!0,d.value=(d.value+1)%i.value,setTimeout(()=>D(),500)}function Pe(a){const n=v.value[a],l=M.value-n,e=s.value[a],t=_.value,u=Math.random()*.4+.6,m=j.value[a].concat(x.value),A=ie(m).handRank;if($.value[a])return{action:"fold"};if(e<l&&l>0){const y=A/10+t/(t+e)*.5;return e>0&&Math.random()<y?{action:"call"}:{action:"fold"}}const b=()=>{let y;A>=8?y=.7+Math.random()*.6:A>=5?y=.4+Math.random()*.4:A>=2?y=.3+Math.random()*.25:y=.25+Math.random()*.3;let I=t*y;return I*=1+(u-.5)*.5,Math.max(z,Math.round(I/5)*5)};if(A>=8)return l===0?Math.random()<.9+u*.1?{action:"raise",amount:b()}:{action:"check"}:Math.random()<.85+u*.15?{action:"raise",amount:b()}:{action:"call"};if(A>=5){if(l===0)return Math.random()<.7+u*.2?{action:"raise",amount:b()}:{action:"check"};if(l<=e*(.6+u*.15))return Math.random()<.65+u*.2?{action:"raise",amount:b()}:{action:"call"};if(l<=e*(.8+u*.1)){const y=Math.random();return y<.3+u*.1?{action:"raise",amount:b()}:y<.95+u*.05?{action:"call"}:{action:"fold"}}else return Math.random()<.5+u*.2?{action:"call"}:{action:"fold"}}else if(A>=2){if(l===0)return Math.random()<.45+u*.2?{action:"raise",amount:b()}:{action:"check"};if(l<=e*(.3+u*.1)){const y=Math.random();return y<.2+u*.15?{action:"raise",amount:b()}:y<.9+u*.1?{action:"call"}:{action:"fold"}}else return l<=e*(.7+u*.1)?Math.random()<.85+u*.15?{action:"call"}:{action:"fold"}:Math.random()<.4+u*.15?{action:"call"}:{action:"fold"}}else return l===0?Math.random()<.2+u*.5?{action:"raise",amount:b()}:{action:"check"}:l<=e*(.25+u*.1)&&l<t*.35?Math.random()<.55+u*.2?{action:"call"}:{action:"fold"}:l<=e*(.4+u*.15)&&Math.random()<.1+u*.15?{action:"call"}:{action:"fold"}}function Be(a,n){const{action:l,amount:e}=n,t=s.value[a],u=v.value[a]||0,m=M.value-u;if(l==="fold")$.value[a]=!0,r(`${f.value[a]} folds.`);else if(l==="raise"){const R=t-m;let A=Math.min(e,R);if(t>m+A&&(A=Math.max(z,A)),A<=0&&m===0)r(`${f.value[a]} checks.`);else if(A<0)$.value[a]=!0,r(`${f.value[a]} folds (unable to complete raise).`);else{const b=m+A;s.value[a]-=b,v.value[a]+=b,_.value+=b,M.value=v.value[a],q.value=a,s.value[a]===0&&b>0?r(`${f.value[a]} raises ALL-IN by $${A} (total bet $${v.value[a]})`):r(`${f.value[a]} raises by $${A} (total bet $${v.value[a]})`),p.value=p.value.map((y,I)=>$.value[I]||I===a)}}else if(l==="call")if(t>=m)s.value[a]-=m,v.value[a]+=m,_.value+=m,r(`${f.value[a]} calls $${m}`);else{const R=t;_.value+=R,v.value[a]+=R,s.value[a]=0,r(`${f.value[a]} calls ALL-IN with $${R}`)}else l==="check"&&(m>0?($.value[a]=!0,r(`${f.value[a]} (AI) attempts to check facing a bet of $${m}, and folds.`)):r(`${f.value[a]} checks.`));p.value[a]=!0}function ve(){const a=[];for(let u=0;u<i.value;u++)if(!$.value[u]){const m=j.value[u].concat(x.value);a.push({index:u,handEvaluation:ie(m)})}a.sort((u,m)=>m.handEvaluation.handRank-u.handEvaluation.handRank);const n=a.length>0?a[0].handEvaluation.handRank:-1,l=a.filter(u=>u.handEvaluation.handRank===n),e=l.length>0?Math.floor(_.value/l.length):0;l.forEach(u=>{s.value[u.index]+=e,r(`${f.value[u.index]} wins with ${u.handEvaluation.handName} and receives $${e}`)});const t=l.length>0?_.value%l.length:_.value;t>0&&l.length>0?(s.value[l[0].index]+=t,r(`${f.value[l[0].index]} receives an extra $${t} from remainder`)):t>0&&l.length===0&&a.length===1&&(s.value[a[0].index]+=t,r(`${f.value[a[0].index]} receives $${t} as the only remaining player.`)),_.value=0,r(`--- End of Round ${L.value} ---`)}function ne(a){N.value=Math.min(ge.value,N.value+a)}function Te(a){N.value=Math.max(z,N.value-a)}const xe={class:"TableLayout"},Se={class:"PlayerLineup"},we={class:"PlayerName"},Fe={class:"PlayerPos"},Ie={class:"PlayerPosition"},Le={class:"PlayerHand"},Ee={class:"RankCard"},Ne={class:"SuitCard"},Ge={class:"PlayerBet"},He={class:"TableFlob"},Oe={key:0,class:"TableFlobCard"},Ye={class:"RankCard"},De={class:"SuitCard"},Ve={class:"PoolMoney"},je={class:"PlayerAction"},Ke={class:"ActionButton"},ze=["disabled"],Je=["disabled"],Qe=["disabled"],qe=["disabled"],Ue={class:"ChipButton"},We=["onClick"],Xe=["onClick"],Ze=["onClick"],ea={class:"TableSetting"},aa=["disabled"],la={__name:"Table",setup(a){const n=g(null);return de(E,()=>{he(()=>{n.value&&(n.value.scrollTop=n.value.scrollHeight)})},{deep:!0}),(l,e)=>(B(),P("div",xe,[c("div",Se,[(B(!0),P(O,null,Y(o(f),(t,u)=>(B(),P("div",{key:u,class:U(["PlayerFrame",{activePlayers:u===o(d),foldedPlayers:o($)[u],Main:u===0&&u===o(d),Player:u!==0&&u===o(d)}])},[c("div",we,[c("div",null,C(t),1),c("div",Fe,"("+C(o(Z)[u])+")",1)]),c("div",Ie,[c("div",null,"$"+C(o(s)[u]),1)]),c("div",Le,[(B(!0),P(O,null,Y(o(j)[u],(m,R)=>(B(),P("div",{key:R,class:U(["CardBody",o(ee)(m.suit)])},[c("div",Ee,C(m.rank),1),c("div",Ne,C(m.suit),1)],2))),128))]),c("div",Ge,"Bet: $"+C(o(v)[u]),1)],2))),128))]),c("div",He,[o(x)&&o(x).length?(B(),P("div",Oe,[(B(!0),P(O,null,Y(o(x),(t,u)=>(B(),P("div",{key:u,class:U(["CardBody",o(ee)(t.suit)])},[c("div",Ye,C(t.rank),1),c("div",De,C(t.suit),1)],2))),128))])):fe("",!0),c("div",Ve,C(o(_))+"$",1),c("div",null,"Current Game Phase: "+C(o(k)),1)]),c("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:n},[(B(!0),P(O,null,Y(o(E),(t,u)=>(B(),P("div",{key:u,class:"RoundLog"},[c("div",null,"Round "+C(u+1),1),c("div",null,[(B(!0),P(O,null,Y(t,(m,R)=>(B(),P("div",{key:R},C(m),1))),128))])]))),128))],512),c("div",je,[c("div",Ke,[c("button",{disabled:!o(ye),onClick:e[0]||(e[0]=t=>o(K)("check"))},"Check",8,ze),c("button",{disabled:!o(ke),onClick:e[1]||(e[1]=t=>o(K)("call",o(Q)))},C(`Call $${o(Q)}`),9,Je),c("button",{disabled:!o(pe),onClick:e[2]||(e[2]=t=>o(K)("raise",o(N)))},"Raise $"+C(o(N)),9,Qe),c("button",{disabled:!o(_e),onClick:e[3]||(e[3]=t=>o(K)("all-in"))},"All-In",8,qe),c("button",{onClick:e[4]||(e[4]=t=>o(K)("fold"))},"Fold")])]),c("div",Ue,[(B(!0),P(O,null,Y(o(be),t=>(B(),P("div",{key:t,class:"ChipBtn"},[c("button",{onClick:u=>o(Te)(t)},"-",8,We),c("button",{onClick:u=>o(ne)(t)},"$"+C(t),9,Xe),c("button",{onClick:u=>o(ne)(t)},"+",8,Ze)]))),128))]),c("div",ea,[c("button",{onClick:e[5]||(e[5]=(...t)=>o(ae)&&o(ae)(...t)),disabled:o(k)!=="idle"},"Start Game",8,aa),c("button",{onClick:e[6]||(e[6]=(...t)=>o(te)&&o(te)(...t))},"Next"),c("button",{onClick:e[7]||(e[7]=(...t)=>o(le)&&o(le)(...t))},"Reset")])]))}},ua=ce(la,[["__scopeId","data-v-a2de944b"]]);export{ua as default};
