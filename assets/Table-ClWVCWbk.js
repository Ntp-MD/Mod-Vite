import{r as $,d as D,_ as Ie,j as Se,c as x,e as h,F as q,f as U,u as r,k as Le,t as B,o as I,n as ve,l as Ee}from"./index-Cosl3xRQ.js";const G=$([]),K=$(1),W=$([]),Q=$({}),O=$([]),R=$(0),k=$(0),p=$("idle"),P=$(0),J=$(0),ue=10,i=$(6),Fe=["#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"],Oe=$(500),F=$(0),te=$(!0),A=$([]),v=$([]),f=$([]),m=$([]),ne=$([]),ie=$([]),He=D(()=>v.value[0]===0),y=$([]),Ke=[10,20,50,100],S=10,oe=D(()=>Math.max(0,P.value-(f.value[0]||0))),Ye=D(()=>v.value[0]+(f.value[0]||0)),Ae=D(()=>p.value==="idle"?!1:P.value===(f.value[0]||0)),_e=D(()=>P.value>(f.value[0]||0)&&v.value[0]>=P.value-(f.value[0]||0)),Ce=D(()=>v.value[0]>P.value-(f.value[0]||0));D(()=>!0);const Re=D(()=>v.value[0]>0&&p.value!=="idle"&&p.value!=="showdown"),se=$(null),me=[{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5}];function je(e){return A.value.forEach((a,n)=>{const l=new RegExp(`\\b${a}\\b`,"g");e=e.replace(l,`<span class="player-log-color" style="color: ${Fe[n]}">${a}</span>`)}),e}function d(e){G.value[K.value-1]||(G.value[K.value-1]=[]),G.value[K.value-1].push(je(e))}function ge(e){switch(e){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function re(e){return{2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14}[e]}function Ge(e){const a={};for(const n of e)if(a[n.suit]=(a[n.suit]||0)+1,a[n.suit]>=5)return n.suit;return null}function ke(e){let a=[...new Set(e)].sort((n,l)=>l-n);a.includes(14)&&a.push(1);for(let n=0;n<=a.length-5;n++){let l=!0;for(let t=1;t<5;t++)if(a[n+t]!==a[n]-t){l=!1;break}if(l)return a.slice(n,n+5)}return null}function Me(){const e=["♠","♥","♦","♣"],a=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],n=[];for(const l of e)for(const t of a)n.push({rank:t,suit:l});for(let l=n.length-1;l>0;l--){const t=Math.floor(Math.random()*(l+1));[n[l],n[t]]=[n[t],n[l]]}return n}function Pe(e,a){const n={};for(let l=0;l<e;l++)n[l]=W.value.splice(0,a);return n}function Te(){F.value=Math.floor(Math.random()*i.value);const e=["Dealer","SB","BB","UTG","MP","CO"];for(let a=0;a<i.value;a++){const n=(a-F.value+i.value)%i.value;ie.value[a]=e[n]||`P${a}`}}function Qe(){if(v.value[0]===0){p.value="idle",d("You are busted. Game over!");return}const e=v.value.map((a,n)=>a>0?n:-1).filter(a=>a!==-1);v.value=e.map(a=>v.value[a]),A.value=e.map(a=>A.value[a]),f.value=e.map(a=>f.value[a]||0),m.value=e.map(a=>m.value[a]||!1),ne.value=e.map(a=>ne.value[a]||""),y.value=e.map(a=>y.value[a]||!1),Q.value=e.map(a=>Q.value[a]),i.value=v.value.length}function we(e){const a=e.map(c=>re(c.rank));e.map(c=>c.suit);const n={};for(let c of a)n[c]=(n[c]||0)+1;const l=Ge(e);let t=[];l&&(t=e.filter(c=>c.suit===l).map(c=>re(c.rank)).sort((c,_)=>_-c));let u=null;t.length>=5&&(u=ke(t));const o=[...new Set(a)].sort((c,_)=>_-c),s=Object.entries(n).map(([c,_])=>({val:+c,count:_})).sort((c,_)=>_.count-c.count||_.val-c.val);if(u)return u[0]===14?{handName:"Royal Flush",handRank:10,values:u}:{handName:"Straight Flush",handRank:9,values:u};if(s[0].count===4){const c=o.find(_=>_!==s[0].val);return{handName:"Four of a Kind",handRank:8,values:[s[0].val,c]}}if(s[0].count===3&&s[1]&&s[1].count>=2)return{handName:"Full House",handRank:7,values:[s[0].val,s[1].val]};if(t.length>=5)return{handName:"Flush",handRank:6,values:t.slice(0,5)};const M=ke(a);if(M)return{handName:"Straight",handRank:5,values:M};if(s[0].count===3){const c=o.filter(_=>_!==s[0].val).slice(0,2);return{handName:"Three of a Kind",handRank:4,values:[s[0].val,...c]}}if(s[0].count===2&&s[1]&&s[1].count===2){const c=s[0].val,_=s[1].val,L=o.find(V=>V!==c&&V!==_);return{handName:"Two Pair",handRank:3,values:[c,_,L]}}if(s[0].count===2){const c=s[0].val,_=o.filter(L=>L!==c).slice(0,3);return{handName:"One Pair",handRank:2,values:[c,..._]}}return{handName:"High Card",handRank:1,values:o.slice(0,5)}}function Je(e){J.value=Math.min(Ye.value,J.value+e)}function De(e){J.value=Math.max(S,J.value-e)}function pe(){G.value=[],K.value=1,W.value=Me(),O.value=[],R.value=0,k.value=0,p.value="betting",P.value=0,A.value=Array.from({length:i.value},(o,s)=>s===0?"You":`AI ${s}`),Q.value=Pe(i.value,2),v.value=Array(i.value).fill(Oe.value),f.value=Array(i.value).fill(0),m.value=Array(i.value).fill(!1),ne.value=Array(i.value).fill(""),y.value=Array(i.value).fill(!1),Te();const e=ue*1,a=ue*2,n=(F.value+1)%i.value,l=(F.value+2)%i.value;d(`--- Round ${K.value} ---`);const t=Math.min(e,v.value[n]);t>0&&(v.value[n]-=t,f.value[n]+=t,R.value+=t,d(`${A.value[n]} posts small blind: ${t}$`));const u=Math.min(a,v.value[l]);u>0&&(v.value[l]-=u,f.value[l]+=u,R.value+=u,d(`${A.value[l]} posts big blind: ${u}$`)),P.value=f.value[l],k.value=(l+1)%i.value,j()}function be(){F.value=0,K.value=1,G.value=[],p.value="idle",A.value=[],v.value=[],f.value=[],m.value=[],ne.value=[],ie.value=[],y.value=[],O.value=[],R.value=0,k.value=0,W.value=[],Q.value={},J.value=S,d("Game reset. Configure settings and click 'Start Game' to begin.")}function ye(){if(!te.value){d("Cannot start a new round before the current one ends.");return}if(te.value=!1,Qe(),i.value<2){d("Not enough players to continue the game."),te.value=!0;return}F.value=(F.value+1)%i.value,K.value++,G.value=[],W.value=Me(),O.value=[],R.value=0,p.value="betting",P.value=0,Q.value=Pe(i.value,2),f.value=Array(i.value).fill(0),m.value=Array(i.value).fill(!1),ne.value=Array(i.value).fill(""),y.value=Array(i.value).fill(!1),Te(),d(`--- Round ${K.value} ---`);const e=ue*1,a=ue*2,n=(F.value+1)%i.value,l=(F.value+2)%i.value,t=Math.min(e,v.value[n]);t>0&&(v.value[n]-=t,f.value[n]+=t,R.value+=t,d(`${A.value[n]} posts small blind: ${t}$`));const u=Math.min(a,v.value[l]);u>0&&(v.value[l]-=u,f.value[l]+=u,R.value+=u,d(`${A.value[l]} posts big blind: ${u}$`)),P.value=f.value[l],k.value=(l+1)%i.value,j()}function Ve(){O.value=W.value.splice(0,3),p.value="flop",y.value=Array(i.value).fill(!1)}function We(){O.value.push(W.value.splice(0,1)[0]),p.value="turn",y.value=Array(i.value).fill(!1)}function ze(){O.value.push(W.value.splice(0,1)[0]),p.value="river",y.value=Array(i.value).fill(!1)}function $e(){f.value=Array(i.value).fill(0),P.value=0,se.value=null,J.value=0;let e="",a=!1;if(p.value==="betting"?(Ve(),e="--- Flop ---"):p.value==="flop"?(We(),e="--- Turn ---"):p.value==="turn"?(ze(),e="--- River ---"):p.value==="river"?(p.value="showdown",Ne(),a=!0):(console.error("proceedToNextPhase called with unexpected gamePhase:",p.value),a=!0),e&&d(e),a)return!0;let n=-1,l;i.value===2?l=F.value:l=(F.value+1)%i.value;for(let t=0;t<i.value;t++){const u=(l+t)%i.value;if(!m.value[u]){n=u;break}}return n!==-1?k.value=n:console.error("CRITICAL: No active player found to start new betting round in proceedToNextPhase."),!1}let ce=!1;async function j(){if(!ce){ce=!0;try{for(;;){const a=k.value;if(m.value.filter(l=>!l).length<=1){p.value!=="showdown"&&(p.value="showdown",Ne());return}if(m.value[a]){k.value=(a+1)%i.value;continue}if(v.value[a]===0&&!m.value[a]&&!y.value[a])y.value[a]=!0;else if(v.value[a]>0&&!m.value[a]&&!y.value[a])break;let n=!0;for(let l=0;l<i.value;l++)if(!m.value[l]&&v.value[l]>0&&!y.value[l]){n=!1;break}if(n){if(!$e()){const t=v.value.map((o,s)=>s).filter(o=>!m.value[o]),u=t.filter(o=>v.value[o]>0);t.length>1&&u.length<=1&&p.value,setTimeout(j,200)}return}k.value=(a+1)%i.value}if(k.value===0&&v.value[0]>0&&!y.value[0]&&!m.value[0])return;try{const a=Ue(k.value);await new Promise(n=>setTimeout(n,200)),qe(k.value,a)}catch(a){console.error(`Error during AI ${A.value[k.value]}'s turn:`,a),d(`Error for ${A.value[k.value]}. They are folded due to an error.`),k.value>=0&&k.value<i.value&&(m.value[k.value]=!0,y.value[k.value]=!0)}let e=!0;for(let a=0;a<i.value;a++)if(!m.value[a]&&v.value[a]>0&&!y.value[a]){e=!1;break}if(e){if(!$e()){const n=v.value.map((t,u)=>u).filter(t=>!m.value[t]),l=n.filter(t=>v.value[t]>0);n.length>1&&l.length<=1&&p.value,setTimeout(j,200)}return}k.value=(k.value+1)%i.value,setTimeout(j,200)}catch(e){console.error("Critical error in nextTurn game logic:",e),d("A critical error occurred. Game progression might be halted.")}finally{ce=!1}}}function le(e,a=0){if(k.value!==0)return;let n="";if(e==="fold")m.value[0]=!0,n="You folded.";else if(e==="check"){if(!Ae.value){d("You cannot check, there is a bet to call or action is not on you.");return}n="You checked."}else if(e==="call"){if(!_e.value){d("You cannot call (not enough money, no bet to call, or action is not on you).");return}const l=oe.value;v.value[0]-=l,f.value[0]+=l,R.value+=l,n=`You called $${l}`}else if(e==="raise"){if(!Ce.value){d("You cannot raise (e.g. not enough funds above the call amount, or action is not on you).");return}const l=oe.value;let t=Math.max(S,a);if(t%10!==0){d("Raise amount must be divisible to 10.");return}const u=l+t;if(v.value[0]<u){d("Not enough money for this specific raise amount.");return}v.value[0]-=u,f.value[0]+=u,R.value+=u,P.value=f.value[0],se.value=0,n=`You raised $${t} (to $${f.value[0]})`,y.value=y.value.map((o,s)=>!!(s===0||m.value[s]))}else if(e==="all-in"){if(!Re.value){d("You cannot go all-in at this time (e.g. game not active, or action not on you).");return}const l=v.value[0];v.value[0]=0,f.value[0]+=l,R.value+=l,n=`You go ALL-IN with $${l} (total bet $${f.value[0]})`,f.value[0]>P.value&&(P.value=f.value[0],se.value=0,y.value=y.value.map((t,u)=>!!(u===0||m.value[u])),n+=", raising the bet!")}d(n),y.value[0]=!0,k.value=(k.value+1)%i.value,setTimeout(()=>j(),200)}function qe(e,a){let{action:n,amount:l}=a;const t=v.value[e],u=f.value[e]||0,o=P.value-u;if(n==="call"&&o===0&&(n="check"),n==="fold")m.value[e]=!0,d(`${A.value[e]} folds.`);else if(n==="raise"){const s=t-o;let M=Math.min(l,s);if(t>o+M&&(M=Math.max(S,M)),M<=0&&o===0)d(`${A.value[e]} checks.`);else if(M<0)m.value[e]=!0,d(`${A.value[e]} folds (unable to complete raise).`);else{const c=o+M;v.value[e]-=c,f.value[e]+=c,R.value+=c,P.value=f.value[e],se.value=e,v.value[e]===0&&c>0?d(`${A.value[e]} raises ALL-IN by $${M} (total bet $${f.value[e]})`):d(`${A.value[e]} raises by $${M} (total bet $${f.value[e]})`),y.value=y.value.map((_,L)=>m.value[L]||L===e)}}else if(n==="call")if(t>=o)v.value[e]-=o,f.value[e]+=o,R.value+=o,d(`${A.value[e]} calls $${o}`);else{const s=t;R.value+=s,f.value[e]+=s,v.value[e]=0,d(`${A.value[e]} calls ALL-IN with $${s}`)}else n==="check"&&(o>0?(m.value[e]=!0,d(`${A.value[e]} (AI) attempts to check facing a bet of $${o}, and folds.`)):d(`${A.value[e]} checks.`));y.value[e]=!0}function Ne(){const e=[];for(let l=0;l<i.value;l++)if(!m.value[l]){const t=Q.value[l].concat(O.value);e.push({index:l,handEvaluation:we(t)})}if(e.length===0){d("No active players. Pot remains."),te.value=!0;return}e.sort((l,t)=>t.handEvaluation.handRank-l.handEvaluation.handRank);const a=e[0],n=R.value;v.value[a.index]+=n,d(`${A.value[a.index]} wins with ${a.handEvaluation.handName} and receives $${n}`),R.value=0,d(`--- End of Round ${K.value} ---`),te.value=!0}function Ue(e){const a=Q.value[e],n=O.value,l=a.concat(n),t=we(l),u=v.value[e],o=P.value-(f.value[e]||0),s=R.value,M=m.value.filter(b=>!b).length,c=ie.value[e]||e,_=i.value;if(n.length===0){const b=a.map(ae=>re(ae.rank)),N=b[0]===b[1],w=[["A","A"],["K","K"],["Q","Q"],["J","J"],["A","K"],["A","Q"],["A","J"],["K","Q"]],g=[a[0].rank,a[1].rank].sort(),E=w.some(ae=>ae.sort().toString()===g.toString()),C=Math.max(...b)>=11;if(N&&["A","K","Q","J","10","9","8","7"].includes(a[0].rank))return o===0?{action:"raise",amount:Math.max(S,30)}:o<=u*.2?{action:"call"}:{action:"fold"};if(E||!N&&C&&Math.min(...b)>=10)return o===0?{action:"raise",amount:Math.max(S,30)}:o<=u*.2?{action:"call"}:{action:"fold"}}let L=0,V=0,X=0;for(let b=0;b<_;b++)b!==e&&!m.value[b]&&(L+=me[b].aggression,V+=me[b].tightness,X++);L=X?L/X:.5,V=X?V/X:.5;const xe=c>=_-2;let z=0;if(n.length>=3){const b={},N={};for(const C of n)b[C.suit]=(b[C.suit]||0)+1,N[C.rank]=(N[C.rank]||0)+1;Object.values(N).some(C=>C>=2)&&(z+=1),Object.values(b).some(C=>C>=3)&&(z+=1);const w={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},g=Object.keys(N).map(C=>w[C]).sort((C,ae)=>C-ae);let E=1;for(let C=1;C<g.length;C++)g[C]===g[C-1]+1?E++:E=1,E>=3&&(z+=1)}let H=0;if(t.handRank<4&&n.length>=3){const b={};for(const g of l)b[g.suit]=(b[g.suit]||0)+1;Object.values(b).some(g=>g===4)&&(H=.18);const N=l.map(g=>re(g.rank)),w=[...new Set(N)].sort((g,E)=>g-E);for(let g=0;g<w.length-3;g++)w[g+3]-w[g]===3&&w.slice(g,g+4).length===4&&(H=Math.max(H,.17));for(let g=0;g<w.length-3;g++){const E=w.slice(g,g+4);E[3]-E[0]===4&&E.length===4&&(H=Math.max(H,.08))}}let fe=o/(s+o);H>0&&u>s*1.5&&(fe=o/(s+o+s*.5));let de=!1;if(n.length>=3){const b=n.map(N=>N.suit);for(const N of["♠","♥","♦","♣"])b.filter(w=>w===N).length>=3&&a.some(w=>w.suit===N&&w.rank==="A")&&(de=!0)}let Z=!1,ee=.05+.1*(6-M);xe&&(ee+=.05),V>.7&&(ee+=.1),H>0&&(ee+=.1),de&&(ee+=.08),Math.random()<ee&&z===0&&(Z=!0);let Y=1;u<s*.5&&(Y*=1.2),u>s*2&&(Y*=.9),M>=4?Y*=.7:M===3?Y*=.85:M===2&&(Y*=1.1);let T=S;t.handRank>=6?T=Math.min(u,Math.max(S,Math.floor(s*.75))):t.handRank>=4?T=Math.min(u,Math.max(S,Math.floor(s*.5))):Z?T=Math.min(u,Math.max(S,Math.floor(s*.4))):T=Math.min(u,S),T=Math.floor(T/10)*10,T<S&&(T=S);const he=t.handRank>=4&&t.handRank<6,Be=L>.7&&z>0&&o>0;return he&&Be&&o<=u*.2?{action:"call"}:Math.random()<.03?{action:"fold"}:m.value[e]?{action:"fold"}:u<=o?t.handRank>=5||Z?{action:"allin"}:{action:"fold"}:H>0&&fe<H&&o<=u*.3?{action:"call"}:Z&&o===0&&u>T?{action:"raise",amount:T}:t.handRank>=6&&Math.random()<.8*Y?o===0?{action:"raise",amount:T}:o<=T?{action:"call"}:{action:"fold"}:he?o===0&&Math.random()<.2*Y&&!z?{action:"raise",amount:T}:o<=T?{action:"call"}:{action:"fold"}:o===0?{action:"check"}:o<=S&&Math.random()<.3*Y?{action:"call"}:Z&&o<=T?{action:"call"}:{action:"fold"}}const Xe={class:"TableLayout"},Ze={class:"PlayerLineup"},ea={class:"PlayerName"},aa={class:"PlayerPos"},la={class:"PlayerPosition"},ta={class:"PlayerHand"},na={class:"RankCard"},ua={class:"SuitCard"},oa={class:"PlayerBet"},sa={class:"TableFlob"},ra={key:0,class:"TableFlobCard"},ia={class:"RankCard"},va={class:"SuitCard"},ca={class:"PoolMoney"},fa={class:"CurrentPhase"},da=["innerHTML"],ha={class:"ActionButton"},ma=["disabled"],ga=["disabled"],ka=["disabled"],pa=["disabled"],ba=["disabled"],ya={class:"ChipButton"},$a=["onClick"],Aa=["onClick"],_a={class:"TableSetting"},Ca=["disabled"],Ra=["disabled"],Ma={__name:"Table",setup(e){const a=$(null);return Se(G,()=>{Ee(()=>{a.value&&(a.value.scrollTop=a.value.scrollHeight)})},{deep:!0}),(n,l)=>(I(),x("div",Xe,[h("div",Ze,[(I(!0),x(q,null,U(r(A),(t,u)=>(I(),x("div",{key:u,class:ve(["PlayerFrame",{currentTurn:u===r(k),foldedPlayers:r(m)[u],mainPlayer:u===0,Player:u!==0&&u===r(k)}])},[h("div",ea,[h("div",null,B(t),1),h("div",aa,"("+B(r(ie)[u])+")",1)]),h("div",la,[h("div",null,"$"+B(r(v)[u]),1)]),h("div",ta,[(I(!0),x(q,null,U(r(Q)[u],(o,s)=>(I(),x("div",{key:s,class:ve(["CardBody",[r(ge)(o.suit),{hideCard:u!==0&&r(p)!=="showdown"}]])},[h("div",na,B(o.rank),1),h("div",ua,B(o.suit),1)],2))),128))]),h("div",oa,"Bet: $"+B(r(f)[u]),1)],2))),128))]),h("div",sa,[r(O)&&r(O).length?(I(),x("div",ra,[(I(!0),x(q,null,U(r(O),(t,u)=>(I(),x("div",{key:u,class:ve(["CardBody",r(ge)(t.suit)])},[h("div",ia,B(t.rank),1),h("div",va,B(t.suit),1)],2))),128))])):Le("",!0),h("div",ca,B(r(R))+"$",1),h("div",fa,"Current Phase: "+B(r(p)),1)]),h("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:a},[(I(!0),x(q,null,U(r(G),(t,u)=>(I(),x("div",{key:u,class:"RoundLog"},[h("div",null,[(I(!0),x(q,null,U(t,(o,s)=>(I(),x("div",{key:s,innerHTML:o},null,8,da))),128))])]))),128))],512),h("div",ha,[h("button",{onClick:l[0]||(l[0]=t=>r(le)("check")),disabled:!r(Ae)},"Check",8,ma),h("button",{onClick:l[1]||(l[1]=t=>r(le)("call",r(oe))),disabled:!r(_e)},B(`Call $${r(oe)}`),9,ga),h("button",{onClick:l[2]||(l[2]=t=>r(le)("raise",r(J))),disabled:!r(Ce)},"Raise $"+B(r(J)),9,ka),h("button",{onClick:l[3]||(l[3]=t=>r(le)("all-in")),disabled:!r(Re)},"All-In",8,pa),h("button",{onClick:l[4]||(l[4]=t=>r(le)("fold")),disabled:r(p)==="idle"||r(k)!==0},"Fold",8,ba)]),h("div",ya,[(I(!0),x(q,null,U(r(Ke),t=>(I(),x("div",{key:t,class:"ChipBtn"},[h("button",{onClick:u=>r(Je)(t)},"+ $"+B(t),9,$a),h("button",{onClick:u=>r(De)(t)},"- $"+B(t),9,Aa)]))),128))]),h("div",_a,[h("button",{onClick:l[5]||(l[5]=(...t)=>r(pe)&&r(pe)(...t)),disabled:r(p)!=="idle"},"Start Game",8,Ca),h("button",{onClick:l[6]||(l[6]=(...t)=>r(ye)&&r(ye)(...t)),disabled:r(p)!=="showdown"||r(He)},"Next",8,Ra),h("button",{onClick:l[7]||(l[7]=(...t)=>r(be)&&r(be)(...t))},"Reset")])]))}},wa=Ie(Ma,[["__scopeId","data-v-7a9b9ca6"]]);export{wa as default};
