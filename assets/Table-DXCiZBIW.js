import{r as A,d as D,_ as Ie,j as Se,c as B,e as h,F as q,f as U,u as r,k as Le,t as I,o as S,n as ve,l as Ee}from"./index-cMvhRL7m.js";const G=A([]),Y=A(1),W=A([]),Q=A({}),O=A([]),M=A(0),p=A(0),b=A("idle"),w=A(0),J=A(0),oe=10,i=A(6),Fe=["#ffffff","#ffffff","#ffffff","#ffffff","#ffffff","#ffffff"],Oe=A(500),F=A(0),ne=A(!0),_=A([]),v=A([]),f=A([]),g=A([]),ue=A([]),ie=A([]),He=D(()=>v.value[0]===0),$=A([]),Ke=[10,20,50,100],N=10,se=D(()=>Math.max(0,w.value-(f.value[0]||0))),Ye=D(()=>v.value[0]+(f.value[0]||0)),Ae=D(()=>b.value==="idle"?!1:w.value===(f.value[0]||0)),_e=D(()=>w.value>(f.value[0]||0)&&v.value[0]>=w.value-(f.value[0]||0)),Ce=D(()=>v.value[0]>w.value-(f.value[0]||0));D(()=>!0);const Re=D(()=>v.value[0]>0&&b.value!=="idle"&&b.value!=="showdown"),re=A(null),me=[{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5},{aggression:.5,tightness:.5}];function je(e){return _.value.forEach((a,n)=>{const l=new RegExp(`\\b${a}\\b`,"g");e=e.replace(l,`<span class="player-log-color" style="color: ${Fe[n]}">${a}</span>`)}),e}function d(e){G.value[Y.value-1]||(G.value[Y.value-1]=[]),G.value[Y.value-1].push(je(e))}function ge(e){switch(e){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function X(e){return{2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14}[e]}function Ge(e){const a={};for(const n of e)if(a[n.suit]=(a[n.suit]||0)+1,a[n.suit]>=5)return n.suit;return null}function ke(e){let a=[...new Set(e)].sort((n,l)=>l-n);a.includes(14)&&a.push(1);for(let n=0;n<=a.length-5;n++){let l=!0;for(let t=1;t<5;t++)if(a[n+t]!==a[n]-t){l=!1;break}if(l)return a.slice(n,n+5)}return null}function Me(){const e=["♠","♥","♦","♣"],a=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],n=[];for(const l of e)for(const t of a)n.push({rank:t,suit:l});for(let l=n.length-1;l>0;l--){const t=Math.floor(Math.random()*(l+1));[n[l],n[t]]=[n[t],n[l]]}return n}function Pe(e,a){const n={};for(let l=0;l<e;l++)n[l]=W.value.splice(0,a);return n}function Te(){F.value=Math.floor(Math.random()*i.value);const e=["Dealer","SB","BB","UTG","MP","CO"];for(let a=0;a<i.value;a++){const n=(a-F.value+i.value)%i.value;ie.value[a]=e[n]||`P${a}`}}function Qe(){if(v.value[0]===0){b.value="idle",d("You are busted. Game over!");return}const e=v.value.map((a,n)=>a>0?n:-1).filter(a=>a!==-1);v.value=e.map(a=>v.value[a]),_.value=e.map(a=>_.value[a]),f.value=e.map(a=>f.value[a]||0),g.value=e.map(a=>g.value[a]||!1),ue.value=e.map(a=>ue.value[a]||""),$.value=e.map(a=>$.value[a]||!1),Q.value=e.map(a=>Q.value[a]),i.value=v.value.length}function we(e){const a=e.map(c=>X(c.rank));e.map(c=>c.suit);const n={};for(let c of a)n[c]=(n[c]||0)+1;const l=Ge(e);let t=[];l&&(t=e.filter(c=>c.suit===l).map(c=>X(c.rank)).sort((c,C)=>C-c));let u=null;t.length>=5&&(u=ke(t));const o=[...new Set(a)].sort((c,C)=>C-c),s=Object.entries(n).map(([c,C])=>({val:+c,count:C})).sort((c,C)=>C.count-c.count||C.val-c.val);if(u)return u[0]===14?{handName:"Royal Flush",handRank:10,values:u}:{handName:"Straight Flush",handRank:9,values:u};if(s[0].count===4){const c=o.find(C=>C!==s[0].val);return{handName:"Four of a Kind",handRank:8,values:[s[0].val,c]}}if(s[0].count===3&&s[1]&&s[1].count>=2)return{handName:"Full House",handRank:7,values:[s[0].val,s[1].val]};if(t.length>=5)return{handName:"Flush",handRank:6,values:t.slice(0,5)};const P=ke(a);if(P)return{handName:"Straight",handRank:5,values:P};if(s[0].count===3){const c=o.filter(C=>C!==s[0].val).slice(0,2);return{handName:"Three of a Kind",handRank:4,values:[s[0].val,...c]}}if(s[0].count===2&&s[1]&&s[1].count===2){const c=s[0].val,C=s[1].val,E=o.find(V=>V!==c&&V!==C);return{handName:"Two Pair",handRank:3,values:[c,C,E]}}if(s[0].count===2){const c=s[0].val,C=o.filter(E=>E!==c).slice(0,3);return{handName:"One Pair",handRank:2,values:[c,...C]}}return{handName:"High Card",handRank:1,values:o.slice(0,5)}}function Je(e){J.value=Math.min(Ye.value,J.value+e)}function De(e){J.value=Math.max(N,J.value-e)}function pe(){G.value=[],Y.value=1,W.value=Me(),O.value=[],M.value=0,p.value=0,b.value="betting",w.value=0,_.value=Array.from({length:i.value},(o,s)=>s===0?"You":`AI ${s}`),Q.value=Pe(i.value,2),v.value=Array(i.value).fill(Oe.value),f.value=Array(i.value).fill(0),g.value=Array(i.value).fill(!1),ue.value=Array(i.value).fill(""),$.value=Array(i.value).fill(!1),Te();const e=oe*1,a=oe*2,n=(F.value+1)%i.value,l=(F.value+2)%i.value;d(`--- Round ${Y.value} ---`);const t=Math.min(e,v.value[n]);t>0&&(v.value[n]-=t,f.value[n]+=t,M.value+=t,d(`${_.value[n]} posts small blind: ${t}$`));const u=Math.min(a,v.value[l]);u>0&&(v.value[l]-=u,f.value[l]+=u,M.value+=u,d(`${_.value[l]} posts big blind: ${u}$`)),w.value=f.value[l],p.value=(l+1)%i.value,j()}function be(){F.value=0,Y.value=1,G.value=[],b.value="idle",_.value=[],v.value=[],f.value=[],g.value=[],ue.value=[],ie.value=[],$.value=[],O.value=[],M.value=0,p.value=0,W.value=[],Q.value={},J.value=N,d("Game reset. Configure settings and click 'Start Game' to begin.")}function ye(){if(!ne.value){d("Cannot start a new round before the current one ends.");return}if(ne.value=!1,Qe(),i.value<2){d("Not enough players to continue the game."),ne.value=!0;return}F.value=(F.value+1)%i.value,Y.value++,G.value=[],W.value=Me(),O.value=[],M.value=0,b.value="betting",w.value=0,Q.value=Pe(i.value,2),f.value=Array(i.value).fill(0),g.value=Array(i.value).fill(!1),ue.value=Array(i.value).fill(""),$.value=Array(i.value).fill(!1),Te(),d(`--- Round ${Y.value} ---`);const e=oe*1,a=oe*2,n=(F.value+1)%i.value,l=(F.value+2)%i.value,t=Math.min(e,v.value[n]);t>0&&(v.value[n]-=t,f.value[n]+=t,M.value+=t,d(`${_.value[n]} posts small blind: ${t}$`));const u=Math.min(a,v.value[l]);u>0&&(v.value[l]-=u,f.value[l]+=u,M.value+=u,d(`${_.value[l]} posts big blind: ${u}$`)),w.value=f.value[l],p.value=(l+1)%i.value,j()}function Ve(){O.value=W.value.splice(0,3),b.value="flop",$.value=Array(i.value).fill(!1)}function We(){O.value.push(W.value.splice(0,1)[0]),b.value="turn",$.value=Array(i.value).fill(!1)}function ze(){O.value.push(W.value.splice(0,1)[0]),b.value="river",$.value=Array(i.value).fill(!1)}function $e(){f.value=Array(i.value).fill(0),w.value=0,re.value=null,J.value=0;let e="",a=!1;if(b.value==="betting"?(Ve(),e="--- Flop ---"):b.value==="flop"?(We(),e="--- Turn ---"):b.value==="turn"?(ze(),e="--- River ---"):b.value==="river"?(b.value="showdown",xe(),a=!0):(console.error("proceedToNextPhase called with unexpected gamePhase:",b.value),a=!0),e&&d(e),a)return!0;let n=-1,l;i.value===2?l=F.value:l=(F.value+1)%i.value;for(let t=0;t<i.value;t++){const u=(l+t)%i.value;if(!g.value[u]){n=u;break}}return n!==-1?p.value=n:console.error("CRITICAL: No active player found to start new betting round in proceedToNextPhase."),!1}let ce=!1;async function j(){if(!ce){ce=!0;try{for(;;){const a=p.value;if(g.value.filter(l=>!l).length<=1){b.value!=="showdown"&&(b.value="showdown",xe());return}if(g.value[a]){p.value=(a+1)%i.value;continue}if(v.value[a]===0&&!g.value[a]&&!$.value[a])$.value[a]=!0;else if(v.value[a]>0&&!g.value[a]&&!$.value[a])break;let n=!0;for(let l=0;l<i.value;l++)if(!g.value[l]&&v.value[l]>0&&!$.value[l]){n=!1;break}if(n){if(!$e()){const t=v.value.map((o,s)=>s).filter(o=>!g.value[o]),u=t.filter(o=>v.value[o]>0);t.length>1&&u.length<=1&&b.value,setTimeout(j,200)}return}p.value=(a+1)%i.value}if(p.value===0&&v.value[0]>0&&!$.value[0]&&!g.value[0])return;try{const a=Ue(p.value);await new Promise(n=>setTimeout(n,200)),qe(p.value,a)}catch(a){console.error(`Error during AI ${_.value[p.value]}'s turn:`,a),d(`Error for ${_.value[p.value]}. They are folded due to an error.`),p.value>=0&&p.value<i.value&&(g.value[p.value]=!0,$.value[p.value]=!0)}let e=!0;for(let a=0;a<i.value;a++)if(!g.value[a]&&v.value[a]>0&&!$.value[a]){e=!1;break}if(e){if(!$e()){const n=v.value.map((t,u)=>u).filter(t=>!g.value[t]),l=n.filter(t=>v.value[t]>0);n.length>1&&l.length<=1&&b.value,setTimeout(j,200)}return}p.value=(p.value+1)%i.value,setTimeout(j,200)}catch(e){console.error("Critical error in nextTurn game logic:",e),d("A critical error occurred. Game progression might be halted.")}finally{ce=!1}}}function te(e,a=0){if(p.value!==0)return;let n="";if(e==="fold")g.value[0]=!0,n="You folded.";else if(e==="check"){if(!Ae.value){d("You cannot check, there is a bet to call or action is not on you.");return}n="You checked."}else if(e==="call"){if(!_e.value){d("You cannot call (not enough money, no bet to call, or action is not on you).");return}const l=se.value;v.value[0]-=l,f.value[0]+=l,M.value+=l,n=`You called $${l}`}else if(e==="raise"){if(!Ce.value){d("You cannot raise (e.g. not enough funds above the call amount, or action is not on you).");return}const l=se.value;let t=Math.max(N,a);if(t%10!==0){d("Raise amount must be divisible to 10.");return}const u=l+t;if(v.value[0]<u){d("Not enough money for this specific raise amount.");return}v.value[0]-=u,f.value[0]+=u,M.value+=u,w.value=f.value[0],re.value=0,n=`You raised $${t} (to $${f.value[0]})`,$.value=$.value.map((o,s)=>!!(s===0||g.value[s]))}else if(e==="all-in"){if(!Re.value){d("You cannot go all-in at this time (e.g. game not active, or action not on you).");return}const l=v.value[0];v.value[0]=0,f.value[0]+=l,M.value+=l,n=`You go ALL-IN with $${l} (total bet $${f.value[0]})`,f.value[0]>w.value&&(w.value=f.value[0],re.value=0,$.value=$.value.map((t,u)=>!!(u===0||g.value[u])),n+=", raising the bet!")}d(n),$.value[0]=!0,p.value=(p.value+1)%i.value,setTimeout(()=>j(),200)}function qe(e,a){let{action:n,amount:l}=a;const t=v.value[e],u=f.value[e]||0,o=w.value-u;if(n==="call"&&o===0&&(n="check"),n==="fold")g.value[e]=!0,d(`${_.value[e]} folds.`);else if(n==="raise"){const s=t-o;let P=Math.min(l,s);if(t>o+P&&(P=Math.max(N,P)),P<=0&&o===0)d(`${_.value[e]} checks.`);else if(P<0)g.value[e]=!0,d(`${_.value[e]} folds (unable to complete raise).`);else{const c=o+P;v.value[e]-=c,f.value[e]+=c,M.value+=c,w.value=f.value[e],re.value=e,v.value[e]===0&&c>0?d(`${_.value[e]} raises ALL-IN by $${P} (total bet $${f.value[e]})`):d(`${_.value[e]} raises by $${P} (total bet $${f.value[e]})`),$.value=$.value.map((C,E)=>g.value[E]||E===e)}}else if(n==="call")if(t>=o)v.value[e]-=o,f.value[e]+=o,M.value+=o,d(`${_.value[e]} calls $${o}`);else{const s=t;M.value+=s,f.value[e]+=s,v.value[e]=0,d(`${_.value[e]} calls ALL-IN with $${s}`)}else n==="check"&&(o>0?(g.value[e]=!0,d(`${_.value[e]} (AI) attempts to check facing a bet of $${o}, and folds.`)):d(`${_.value[e]} checks.`));$.value[e]=!0}function xe(){const e=[];for(let l=0;l<i.value;l++)if(!g.value[l]){const t=Q.value[l].concat(O.value);e.push({index:l,handEvaluation:we(t)})}if(e.length===0){d("No active players. Pot remains."),ne.value=!0;return}e.sort((l,t)=>t.handEvaluation.handRank-l.handEvaluation.handRank);const a=e[0],n=M.value;v.value[a.index]+=n,d(`${_.value[a.index]} wins with ${a.handEvaluation.handName} and receives $${n}`),M.value=0,d(`--- End of Round ${Y.value} ---`),ne.value=!0}function Ue(e){const a=Q.value[e],n=O.value,l=a.concat(n),t=we(l),u=v.value[e],o=w.value-(f.value[e]||0),s=M.value,P=g.value.filter(k=>!k).length,c=ie.value[e]||e,C=i.value;if(n.length>0&&t.handName==="One Pair"){const k=n.map(y=>X(y.rank)),T=Math.max(...k,0),R=a.map(y=>X(y.rank)),m=R.includes(T),L=R.includes(14);if(m&&L)return o===0?{action:"raise",amount:Math.max(N,Math.floor(s*.5))}:o<=u*.4?{action:"call"}:{action:"fold"}}if(n.length===0){const k=a.map(le=>X(le.rank)),T=k[0]===k[1],R=[["A","A"],["K","K"],["Q","Q"],["J","J"],["A","K"],["A","Q"],["A","J"],["K","Q"]],m=[a[0].rank,a[1].rank].sort(),L=R.some(le=>le.sort().toString()===m.toString()),y=Math.max(...k)>=11;if(T&&["A","K","Q","J","10","9","8","7"].includes(a[0].rank))return o===0?{action:"raise",amount:Math.max(N,30)}:o<=u*.2?{action:"call"}:{action:"fold"};if(L||!T&&y&&Math.min(...k)>=10)return o===0?{action:"raise",amount:Math.max(N,30)}:o<=u*.2?{action:"call"}:{action:"fold"}}let E=0,V=0,Z=0;for(let k=0;k<C;k++)k!==e&&!g.value[k]&&(E+=me[k].aggression,V+=me[k].tightness,Z++);E=Z?E/Z:.5,V=Z?V/Z:.5;const Ne=c>=C-2;let z=0;if(n.length>=3){const k={},T={};for(const y of n)k[y.suit]=(k[y.suit]||0)+1,T[y.rank]=(T[y.rank]||0)+1;Object.values(T).some(y=>y>=2)&&(z+=1),Object.values(k).some(y=>y>=3)&&(z+=1);const R={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},m=Object.keys(T).map(y=>R[y]).sort((y,le)=>y-le);let L=1;for(let y=1;y<m.length;y++)m[y]===m[y-1]+1?L++:L=1,L>=3&&(z+=1)}let H=0;if(t.handRank<4&&n.length>=3){const k={};for(const m of l)k[m.suit]=(k[m.suit]||0)+1;Object.values(k).some(m=>m===4)&&(H=.18);const T=l.map(m=>X(m.rank)),R=[...new Set(T)].sort((m,L)=>m-L);for(let m=0;m<R.length-3;m++)R[m+3]-R[m]===3&&R.slice(m,m+4).length===4&&(H=Math.max(H,.17));for(let m=0;m<R.length-3;m++){const L=R.slice(m,m+4);L[3]-L[0]===4&&L.length===4&&(H=Math.max(H,.08))}}let fe=o/(s+o);H>0&&u>s*1.5&&(fe=o/(s+o+s*.5));let de=!1;if(n.length>=3){const k=n.map(T=>T.suit);for(const T of["♠","♥","♦","♣"])k.filter(R=>R===T).length>=3&&a.some(R=>R.suit===T&&R.rank==="A")&&(de=!0)}let ee=!1,ae=.18+.18*(6-P);Ne&&(ae+=.1),V>.7&&(ae+=.15),H>0&&(ae+=.15),de&&(ae+=.12),Math.random()<ae&&z===0&&(ee=!0);let K=1.7;u<s*.5&&(K*=1.3),u>s*2&&(K*=1.1),P>=4?K*=1:P===3?K*=1.2:P===2&&(K*=1.3);let x=N;t.handRank>=6&&Math.random()<.95*K?x=Math.min(u,Math.max(N,Math.floor(s*.75))):t.handRank>=4?x=Math.min(u,Math.max(N,Math.floor(s*.5))):ee?x=Math.min(u,Math.max(N,Math.floor(s*.4))):x=Math.min(u,N),x=Math.floor(x/10)*10,x<N&&(x=N);const he=t.handRank>=4&&t.handRank<6,Be=E>.7&&z>0&&o>0;return he&&Be&&o<=u*.2?{action:"call"}:Math.random()<.03?{action:"fold"}:g.value[e]?{action:"fold"}:u<=o?t.handRank>=5||ee?{action:"allin"}:{action:"fold"}:H>0&&fe<H&&o<=u*.3?{action:"call"}:ee&&o===0&&u>x?{action:"raise",amount:x}:t.handRank>=6&&Math.random()<.8*K?o===0?{action:"raise",amount:x}:o<=x?{action:"call"}:{action:"fold"}:he?o===0&&Math.random()<.5*K&&!z?{action:"raise",amount:x}:o<=x?{action:"call"}:{action:"fold"}:o===0?{action:"check"}:o<=N&&Math.random()<.6*K?{action:"call"}:ee&&o<=x?{action:"call"}:{action:"fold"}}const Xe={class:"TableLayout"},Ze={class:"PlayerLineup"},ea={class:"PlayerName"},aa={class:"PlayerPos"},la={class:"PlayerPosition"},ta={class:"PlayerHand"},na={class:"RankCard"},ua={class:"SuitCard"},oa={class:"PlayerBet"},sa={class:"TableFlob"},ra={key:0,class:"TableFlobCard"},ia={class:"RankCard"},va={class:"SuitCard"},ca={class:"PoolMoney"},fa={class:"CurrentPhase"},da=["innerHTML"],ha={class:"ActionButton"},ma=["disabled"],ga=["disabled"],ka=["disabled"],pa=["disabled"],ba=["disabled"],ya={class:"ChipButton"},$a=["onClick"],Aa=["onClick"],_a={class:"TableSetting"},Ca=["disabled"],Ra=["disabled"],Ma={__name:"Table",setup(e){const a=A(null);return Se(G,()=>{Ee(()=>{a.value&&(a.value.scrollTop=a.value.scrollHeight)})},{deep:!0}),(n,l)=>(S(),B("div",Xe,[h("div",Ze,[(S(!0),B(q,null,U(r(_),(t,u)=>(S(),B("div",{key:u,class:ve(["PlayerFrame",{currentTurn:u===r(p),foldedPlayers:r(g)[u],mainPlayer:u===0,Player:u!==0&&u===r(p)}])},[h("div",ea,[h("div",null,I(t),1),h("div",aa,"("+I(r(ie)[u])+")",1)]),h("div",la,[h("div",null,"$"+I(r(v)[u]),1)]),h("div",ta,[(S(!0),B(q,null,U(r(Q)[u],(o,s)=>(S(),B("div",{key:s,class:ve(["CardBody",[r(ge)(o.suit),{hideCard:u!==0&&r(b)!=="showdown"}]])},[h("div",na,I(o.rank),1),h("div",ua,I(o.suit),1)],2))),128))]),h("div",oa,"Bet: $"+I(r(f)[u]),1)],2))),128))]),h("div",sa,[r(O)&&r(O).length?(S(),B("div",ra,[(S(!0),B(q,null,U(r(O),(t,u)=>(S(),B("div",{key:u,class:ve(["CardBody",r(ge)(t.suit)])},[h("div",ia,I(t.rank),1),h("div",va,I(t.suit),1)],2))),128))])):Le("",!0),h("div",ca,I(r(M))+"$",1),h("div",fa,"Current Phase: "+I(r(b)),1)]),h("div",{class:"TimelineLog",ref_key:"timelineLogRef",ref:a},[(S(!0),B(q,null,U(r(G),(t,u)=>(S(),B("div",{key:u,class:"RoundLog"},[h("div",null,[(S(!0),B(q,null,U(t,(o,s)=>(S(),B("div",{key:s,innerHTML:o},null,8,da))),128))])]))),128))],512),h("div",ha,[h("button",{onClick:l[0]||(l[0]=t=>r(te)("check")),disabled:!r(Ae)},"Check",8,ma),h("button",{onClick:l[1]||(l[1]=t=>r(te)("call",r(se))),disabled:!r(_e)},I(`Call $${r(se)}`),9,ga),h("button",{onClick:l[2]||(l[2]=t=>r(te)("raise",r(J))),disabled:!r(Ce)},"Raise $"+I(r(J)),9,ka),h("button",{onClick:l[3]||(l[3]=t=>r(te)("all-in")),disabled:!r(Re)},"All-In",8,pa),h("button",{onClick:l[4]||(l[4]=t=>r(te)("fold")),disabled:r(b)==="idle"||r(p)!==0},"Fold",8,ba)]),h("div",ya,[(S(!0),B(q,null,U(r(Ke),t=>(S(),B("div",{key:t,class:"ChipBtn"},[h("button",{onClick:u=>r(Je)(t)},"+ $"+I(t),9,$a),h("button",{onClick:u=>r(De)(t)},"- $"+I(t),9,Aa)]))),128))]),h("div",_a,[h("button",{onClick:l[5]||(l[5]=(...t)=>r(pe)&&r(pe)(...t)),disabled:r(b)!=="idle"},"Start Game",8,Ca),h("button",{onClick:l[6]||(l[6]=(...t)=>r(ye)&&r(ye)(...t)),disabled:r(b)!=="showdown"||r(He)},"Next",8,Ra),h("button",{onClick:l[7]||(l[7]=(...t)=>r(be)&&r(be)(...t))},"Reset")])]))}},wa=Ie(Ma,[["__scopeId","data-v-7a9b9ca6"]]);export{wa as default};
