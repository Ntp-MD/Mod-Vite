import{_ as Re,r as h,e as D,a as M,b as n,F as V,g as j,q as Pe,t as A,o as R,n as X}from"./index-Bic-Kurd.js";const Te={class:"TableLayout"},Be={class:"PlayerLineup"},Fe={class:"PlayerName"},Se={class:"PlayerPosition"},Ie={class:"PlayerHand"},we={class:"RankCard"},xe={class:"SuitCard"},Ee={class:"PlayerBet"},Le={class:"TableBoard"},Ne={class:"TimelineLog"},Ge={class:"PlayerAction"},He={class:"TableFlob"},Ye={key:0,class:"TableFlobCard"},Oe={class:"RankCard"},De={class:"SuitCard"},Ve={class:"PoolMoney"},je={class:"ActionButton"},Ke=["disabled"],qe=["disabled"],ze=["disabled"],Je=["disabled"],Qe={class:"ChipGroup"},Ue=["onClick"],We=["onClick"],Xe=["onClick"],Ze={class:"TableSetting"},ea=["disabled"],H=5,z=5,aa={__name:"TableBackup",setup(la){const E=h([]),I=h(1),L=h([]),Y=h({}),P=h([]),g=h(0),i=h(0),b=h("idle"),C=h(0),x=h(5),o=h(6),oe=h(5e3),N=h(0),_=h([]),f=h([]),r=h([]),y=h([]),Q=h([]),U=h([]),se=h([]),m=h([]),re=[5,10,20,50,100,200],J=D(()=>Math.max(0,C.value-(r.value[0]||0))),ie=D(()=>f.value[0]+(r.value[0]||0)),ve=D(()=>C.value===(r.value[0]||0)),ce=D(()=>C.value>(r.value[0]||0)&&f.value[0]>=C.value-(r.value[0]||0)),de=D(()=>f.value[0]>C.value-(r.value[0]||0)),fe=D(()=>f.value[0]>0&&b.value!=="idle"&&b.value!=="showdown"),K=h(null);function c(e){E.value[I.value-1]||(E.value[I.value-1]=[]),E.value[I.value-1].push(e)}function Z(e){switch(e){case"♠":return"spades";case"♥":return"hearts";case"♦":return"diamonds";case"♣":return"clubs";default:return""}}function ee(){const e=["♠","♥","♦","♣"],u=["2","3","4","5","6","7","8","9","10","J","Q","K","A"],a=[];for(const l of e)for(const s of u)a.push({rank:s,suit:l});for(let l=a.length-1;l>0;l--){const s=Math.floor(Math.random()*(l+1));[a[l],a[s]]=[a[s],a[l]]}return a}function ae(e,u){const a={};for(let l=0;l<e;l++)a[l]=L.value.splice(0,u);return a}function le(e){const u={2:2,3:3,4:4,5:5,6:6,7:7,8:8,9:9,10:10,J:11,Q:12,K:13,A:14},a={},l={},s=e.map(v=>u[v.rank]).sort((v,S)=>v-S);for(const v of e){const S=u[v.rank];a[S]=(a[S]||0)+1,l[v.suit]=(l[v.suit]||0)+1}const t=Object.values(l).some(v=>v>=5);let $=null;if(t){for(const v in l)if(l[v]>=5){$=v;break}}const p=(t?e.filter(v=>v.suit===$):e).map(v=>u[v.rank]).sort((v,S)=>v-S);let d=[...new Set(p)].sort((v,S)=>v-S),k=!1,w=0;if(d.length>=5){for(let v=d.length-1;v>=4;v--)if(d[v]-d[v-4]===4){k=!0,w=d[v];break}!k&&d.includes(14)&&d.includes(2)&&d.includes(3)&&d.includes(4)&&d.includes(5)&&(k=!0,w=5)}const G=Object.values(a).sort((v,S)=>S-v);let B=0,F="High Card";return t&&k&&w===14?(B=10,F="Royal Flush"):t&&k?(B=9,F="Straight Flush"):G[0]===4?(B=8,F="Four of a Kind"):G[0]===3&&G[1]>=2?(B=7,F="Full House"):t?(B=6,F="Flush"):k?(B=5,F="Straight"):G[0]===3?(B=4,F="Three of a Kind"):G[0]===2&&G[1]===2?(B=3,F="Two Pair"):G[0]===2&&(B=2,F="One Pair"),{handName:F,handRank:B,highCard:Math.max(...s),values:s}}function te(){N.value=Math.floor(Math.random()*o.value);const e=["Dealer","SB","BB","UTG","MP","CO"];for(let u=0;u<o.value;u++){const a=(u-N.value+o.value)%o.value;U.value[u]=e[a]||`P${u}`}}function he(e){for(let u=e.length-1;u>0;u--){const a=Math.floor(Math.random()*(u+1));[e[u],e[a]]=[e[a],e[u]]}return e}function me(){E.value=[],I.value=1,L.value=ee(),P.value=[],g.value=0,i.value=0,b.value="betting",C.value=0,se.value=he([...Array(o.value).keys()]),_.value=Array.from({length:o.value},(s,t)=>t===0?"You":`AI ${t}`),Y.value=ae(o.value,2),f.value=Array(o.value).fill(oe.value),r.value=Array(o.value).fill(0),y.value=Array(o.value).fill(!1),Q.value=Array(o.value).fill(""),m.value=Array(o.value).fill(!1),te();const e=H*1,u=H*2,a=(N.value+1)%o.value,l=(N.value+2)%o.value;c(`--- Round ${I.value} ---`),f.value[a]-=e,r.value[a]=e,g.value+=e,c(`${_.value[a]} posts small blind: ${e}$`),f.value[l]-=u,r.value[l]=u,g.value+=u,c(`${_.value[l]} posts big blind: ${u}$`),C.value=u,i.value=(l+1)%o.value,O()}function $e(){N.value=0,I.value=1,E.value=[],b.value="idle",_.value=[],f.value=[],r.value=[],y.value=[],Q.value=[],U.value=[],m.value=[],P.value=[],g.value=0,i.value=0,L.value=[],Y.value={},x.value=z,c("Game reset. Configure settings and click 'Start Game' to begin.")}function ke(){N.value=(N.value+1)%o.value,I.value++,E.value.push([]),L.value=ee(),P.value=[],g.value=0,i.value=0,b.value="betting",C.value=0,Y.value=ae(o.value,2),r.value=Array(o.value).fill(0),y.value=Array(o.value).fill(!1),Q.value=Array(o.value).fill(""),m.value=Array(o.value).fill(!1),te();for(let e=0;e<o.value;e++)f.value[e]-=H,r.value[e]=H,g.value+=H,c(`${_.value[e]} posts ${H}$`);C.value=H,c(`--- Round ${I.value} ---`),i.value=0,O()}function ue(){if(m.value=Array(o.value).fill(!1),r.value=Array(o.value).fill(0),C.value=0,K.value=null,b.value==="betting")be(),c("--- Flop ---"),b.value="flop";else if(b.value==="flop")_e(),c("--- Turn ---"),b.value="turn";else if(b.value==="turn")ye(),c("--- River ---"),b.value="river";else if(b.value==="river")return b.value="showdown",ne(),!0;return i.value=0,!1}let W=!1;async function O(){if(!W){W=!0;try{for(;;){if(y.value.filter(e=>!e).length<=1){b.value="showdown",ne();return}if(i.value>=0&&i.value<o.value&&!y.value[i.value]&&!m.value[i.value])break;if(i.value=(i.value+1)%o.value,m.value.every((e,u)=>e||y.value[u])){ue()||setTimeout(O,500);return}}if(i.value===0)return;try{const e=pe(i.value);await new Promise(u=>setTimeout(u,500)),ge(i.value,e)}catch(e){console.error(`Error during AI ${_.value[i.value]}'s turn:`,e),c(`Error for ${_.value[i.value]}. They are folded due to an error.`),i.value>=0&&i.value<o.value&&(y.value[i.value]=!0,m.value[i.value]=!0)}if(m.value.every((e,u)=>e||y.value[u])){ue()||setTimeout(O,500);return}i.value=(i.value+1)%o.value,setTimeout(O,200)}catch(e){console.error("Critical error in nextTurn game logic:",e),c("A critical error occurred. Game progression might be halted.")}finally{W=!1}}}function be(){P.value=L.value.splice(0,3),b.value="flop",m.value=Array(o.value).fill(!1)}function _e(){P.value.push(L.value.splice(0,1)[0]),b.value="turn",m.value=Array(o.value).fill(!1)}function ye(){P.value.push(L.value.splice(0,1)[0]),b.value="river",m.value=Array(o.value).fill(!1)}function q(e,u=0){if(i.value!==0)return;let a="";if(e==="fold")y.value[0]=!0,a="You folded.";else if(e==="check")a="You checked.";else if(e==="call"){const l=J.value;f.value[0]-=l,r.value[0]+=l,g.value+=l,a=`You called $${l}`}else if(e==="raise"){const l=J.value,s=Math.max(z,u),t=l+s;if(f.value[0]<t){a="Not enough money to raise.";return}f.value[0]-=t,r.value[0]+=t,g.value+=t,C.value=r.value[0],K.value=0,a=`You raised $${s} (to $${r.value[0]})`,m.value=m.value.map(($,T)=>!!(T===0||y.value[T]))}else if(e==="all-in"){const l=f.value[0];f.value[0]=0,r.value[0]+=l,g.value+=l,a=`You go ALL-IN with $${l} (total bet $${r.value[0]})`,r.value[0]>C.value&&(C.value=r.value[0],K.value=0,m.value=m.value.map((s,t)=>!!(t===0||y.value[t])),a+=", raising the bet!"),K.value=0,a=`You raised $${raise} (to $${r.value[0]})`,e==="raise"&&(m.value=m.value.map((s,t)=>!!(t===0||y.value[t])))}c(a),m.value[0]=!0,i.value=(i.value+1)%o.value,setTimeout(()=>O(),500)}function pe(e){const u=r.value[e],a=C.value-u,l=f.value[e],s=g.value,t=Math.random()*.4+.3,$=Y.value[e].concat(P.value),p=le($).handRank;if(y.value[e])return{action:"fold"};if(l<a&&a>0){const k=p/4+s/(s+l)*.5;return l>0&&Math.random()<k?{action:"call"}:{action:"fold"}}const d=()=>{let k;p>=8?k=.7+Math.random()*.6:p>=5?k=.4+Math.random()*.4:p>=2?k=.25+Math.random()*.25:k=.2+Math.random()*.35;let w=s*k;return w*=1+(t-.5)*.5,Math.max(z,Math.round(w/5)*5)};if(p>=8)return a===0?Math.random()<.9+t*.1?{action:"raise",amount:d()}:{action:"check"}:Math.random()<.85+t*.15?{action:"raise",amount:d()}:{action:"call"};if(p>=5){if(a===0)return Math.random()<.7+t*.2?{action:"raise",amount:d()}:{action:"check"};if(a<=l*(.6+t*.15))return Math.random()<.65+t*.2?{action:"raise",amount:d()}:{action:"call"};if(a<=l*(.8+t*.1)){const k=Math.random();return k<.3+t*.1?{action:"raise",amount:d()}:k<.95+t*.05?{action:"call"}:{action:"fold"}}else return Math.random()<.5+t*.2?{action:"call"}:{action:"fold"}}else if(p>=2){if(a===0)return Math.random()<.45+t*.2?{action:"raise",amount:d()}:{action:"check"};if(a<=l*(.3+t*.1)){const k=Math.random();return k<.2+t*.15?{action:"raise",amount:d()}:k<.9+t*.1?{action:"call"}:{action:"fold"}}else return a<=l*(.7+t*.1)?Math.random()<.85+t*.15?{action:"call"}:{action:"fold"}:Math.random()<.35+t*.1?{action:"call"}:{action:"fold"}}else return a===0?Math.random()<.2+t*.15?{action:"raise",amount:d()}:{action:"check"}:a<=l*(.2+t*.05)&&a<s*.3?Math.random()<.6+t*.2?{action:"call"}:{action:"fold"}:{action:"fold"}}function ge(e,u){const{action:a,amount:l}=u,s=f.value[e],t=r.value[e]||0,$=C.value-t;if(a==="fold")y.value[e]=!0,c(`${_.value[e]} folds.`);else if(a==="raise"){const T=s-$;let p=Math.min(l,T);if(s>$+p&&(p=Math.max(z,p)),p<=0&&$===0)c(`${_.value[e]} checks.`);else if(p<0)y.value[e]=!0,c(`${_.value[e]} folds (unable to complete raise).`);else{const d=$+p;f.value[e]-=d,r.value[e]+=d,g.value+=d,C.value=r.value[e],K.value=e,f.value[e]===0&&d>0?c(`${_.value[e]} raises ALL-IN by $${p} (total bet $${r.value[e]})`):c(`${_.value[e]} raises by $${p} (total bet $${r.value[e]})`),m.value=m.value.map((k,w)=>y.value[w]||w===e)}}else if(a==="call")if(s>=$)f.value[e]-=$,r.value[e]+=$,g.value+=$,c(`${_.value[e]} calls $${$}`);else{const T=s;g.value+=T,r.value[e]+=T,f.value[e]=0,c(`${_.value[e]} calls ALL-IN with $${T}`)}else a==="check"&&($>0?(y.value[e]=!0,c(`${_.value[e]} (AI) attempts to check facing a bet of $${$}, and folds.`)):c(`${_.value[e]} checks.`));m.value[e]=!0}function ne(){const e=[];for(let t=0;t<o.value;t++)if(!y.value[t]){const $=Y.value[t].concat(P.value);e.push({index:t,handEvaluation:le($)})}e.sort((t,$)=>$.handEvaluation.handRank-t.handEvaluation.handRank);const u=e.length>0?e[0].handEvaluation.handRank:-1,a=e.filter(t=>t.handEvaluation.handRank===u),l=Math.floor(g.value/a.length);a.forEach(t=>{f.value[t.index]+=l,c(`${_.value[t.index]} wins with ${t.handEvaluation.handName} and receives $${l}`)});const s=g.value%a.length;s>0&&a.length>0&&(f.value[a[0].index]+=s,c(`${_.value[a[0].index]} receives an extra $${s} from remainder`)),g.value=0,c(`--- End of Round ${I.value} ---`)}function Ce(e){x.value=Math.min(ie.value,x.value+e)}function Ae(e){x.value=Math.max(z,x.value-e)}function Me(e){x.value=e}return(e,u)=>(R(),M("div",Te,[n("div",Be,[(R(!0),M(V,null,j(_.value,(a,l)=>(R(),M("div",{key:l,class:X(["PlayerFrame",{activePlayers:l===i.value,foldedPlayers:y.value[l],Main:l===0&&l===i.value,Player:l!==0&&l===i.value}])},[n("div",Fe,[n("div",null,A(a),1),n("div",null,"("+A(U.value[l])+")",1)]),n("div",Se,[n("div",null,"$"+A(f.value[l]),1)]),n("div",Ie,[(R(!0),M(V,null,j(Y.value[l],(s,t)=>(R(),M("div",{key:t,class:X(["CardBody",Z(s.suit)])},[n("div",we,A(s.rank),1),n("div",xe,A(s.suit),1)],2))),128))]),n("div",Ee,"Bet: $"+A(r.value[l]),1)],2))),128))]),n("div",Le,[n("div",Ne,[(R(!0),M(V,null,j(E.value,(a,l)=>(R(),M("div",{key:l,class:"RoundLog"},[n("div",null,"Round "+A(l+1),1),n("div",null,[(R(!0),M(V,null,j(a,(s,t)=>(R(),M("div",{key:t},A(s),1))),128))])]))),128))]),n("div",Ge,[n("div",He,[P.value&&P.value.length?(R(),M("div",Ye,[(R(!0),M(V,null,j(P.value,(a,l)=>(R(),M("div",{key:l,class:X(["CardBody",Z(a.suit)])},[n("div",Oe,A(a.rank),1),n("div",De,A(a.suit),1)],2))),128))])):Pe("",!0),n("div",Ve,A(g.value)+"$",1),n("div",null,"Current Game Phase: "+A(b.value),1)]),n("div",je,[n("button",{disabled:!ve.value,onClick:u[0]||(u[0]=a=>q("check"))},"Check",8,Ke),n("button",{disabled:!ce.value,onClick:u[1]||(u[1]=a=>q("call",J.value))},A(`Call $${J.value}`),9,qe),n("button",{disabled:!de.value,onClick:u[2]||(u[2]=a=>q("raise",x.value))},"Raise $"+A(x.value),9,ze),n("button",{disabled:!fe.value,onClick:u[3]||(u[3]=a=>q("all-in"))},"All-In",8,Je),n("button",{onClick:u[4]||(u[4]=a=>q("fold"))},"Fold")]),n("div",Qe,[(R(),M(V,null,j(re,a=>n("div",{key:a,class:"ChipControl"},[n("button",{onClick:l=>Ae(a)},"-",8,Ue),n("button",{onClick:l=>Me(a)},"$"+A(a),9,We),n("button",{onClick:l=>Ce(a)},"+",8,Xe)])),64))]),n("div",Ze,[n("button",{onClick:me,disabled:b.value!=="idle"},"Start Game",8,ea),n("button",{onClick:ke},"Next Round"),n("button",{onClick:$e},"Reset")])])])]))}},ua=Re(aa,[["__scopeId","data-v-c206ad69"]]);export{ua as default};
